[
  {
    "name": "acorn",
    "result": "ok",
    "keys": [
      "Node",
      "Parser",
      "Position",
      "SourceLocation",
      "TokContext",
      "Token",
      "TokenType",
      "defaultOptions",
      "getLineInfo",
      "isIdentifierChar",
      "isIdentifierStart",
      "isNewLine",
      "keywordTypes",
      "lineBreak",
      "lineBreakG",
      "nonASCIIwhitespace",
      "parse",
      "parseExpressionAt",
      "tokContexts",
      "tokTypes",
      "tokenizer",
      "version"
    ]
  },
  {
    "name": "ramda",
    "result": "ok",
    "keys": [
      "F",
      "T",
      "__",
      "add",
      "addIndex",
      "adjust",
      "all",
      "allPass",
      "always",
      "and",
      "any",
      "anyPass",
      "ap",
      "aperture",
      "append",
      "apply",
      "applySpec",
      "applyTo",
      "ascend",
      "assoc",
      "assocPath",
      "binary",
      "bind",
      "both",
      "call",
      "chain",
      "clamp",
      "clone",
      "comparator",
      "complement",
      "compose",
      "composeK",
      "composeP",
      "composeWith",
      "concat",
      "cond",
      "construct",
      "constructN",
      "contains",
      "converge",
      "countBy",
      "curry",
      "curryN",
      "dec",
      "defaultTo",
      "descend",
      "difference",
      "differenceWith",
      "dissoc",
      "dissocPath",
      "divide",
      "drop",
      "dropLast",
      "dropLastWhile",
      "dropRepeats",
      "dropRepeatsWith",
      "dropWhile",
      "either",
      "empty",
      "endsWith",
      "eqBy",
      "eqProps",
      "equals",
      "evolve",
      "filter",
      "find",
      "findIndex",
      "findLast",
      "findLastIndex",
      "flatten",
      "flip",
      "forEach",
      "forEachObjIndexed",
      "fromPairs",
      "groupBy",
      "groupWith",
      "gt",
      "gte",
      "has",
      "hasIn",
      "hasPath",
      "head",
      "identical",
      "identity",
      "ifElse",
      "inc",
      "includes",
      "indexBy",
      "indexOf",
      "init",
      "innerJoin",
      "insert",
      "insertAll",
      "intersection",
      "intersperse",
      "into",
      "invert",
      "invertObj",
      "invoker",
      "is",
      "isEmpty",
      "isNil",
      "join",
      "juxt",
      "keys",
      "keysIn",
      "last",
      "lastIndexOf",
      "length",
      "lens",
      "lensIndex",
      "lensPath",
      "lensProp",
      "lift",
      "liftN",
      "lt",
      "lte",
      "map",
      "mapAccum",
      "mapAccumRight",
      "mapObjIndexed",
      "match",
      "mathMod",
      "max",
      "maxBy",
      "mean",
      "median",
      "memoizeWith",
      "merge",
      "mergeAll",
      "mergeDeepLeft",
      "mergeDeepRight",
      "mergeDeepWith",
      "mergeDeepWithKey",
      "mergeLeft",
      "mergeRight",
      "mergeWith",
      "mergeWithKey",
      "min",
      "minBy",
      "modulo",
      "move",
      "multiply",
      "nAry",
      "negate",
      "none",
      "not",
      "nth",
      "nthArg",
      "o",
      "objOf",
      "of",
      "omit",
      "once",
      "or",
      "otherwise",
      "over",
      "pair",
      "partial",
      "partialRight",
      "partition",
      "path",
      "pathEq",
      "pathOr",
      "pathSatisfies",
      "pick",
      "pickAll",
      "pickBy",
      "pipe",
      "pipeK",
      "pipeP",
      "pipeWith",
      "pluck",
      "prepend",
      "product",
      "project",
      "prop",
      "propEq",
      "propIs",
      "propOr",
      "propSatisfies",
      "props",
      "range",
      "reduce",
      "reduceBy",
      "reduceRight",
      "reduceWhile",
      "reduced",
      "reject",
      "remove",
      "repeat",
      "replace",
      "reverse",
      "scan",
      "sequence",
      "set",
      "slice",
      "sort",
      "sortBy",
      "sortWith",
      "split",
      "splitAt",
      "splitEvery",
      "splitWhen",
      "startsWith",
      "subtract",
      "sum",
      "symmetricDifference",
      "symmetricDifferenceWith",
      "tail",
      "take",
      "takeLast",
      "takeLastWhile",
      "takeWhile",
      "tap",
      "test",
      "then",
      "thunkify",
      "times",
      "toLower",
      "toPairs",
      "toPairsIn",
      "toString",
      "toUpper",
      "transduce",
      "transpose",
      "traverse",
      "trim",
      "tryCatch",
      "type",
      "unapply",
      "unary",
      "uncurryN",
      "unfold",
      "union",
      "unionWith",
      "uniq",
      "uniqBy",
      "uniqWith",
      "unless",
      "unnest",
      "until",
      "update",
      "useWith",
      "values",
      "valuesIn",
      "view",
      "when",
      "where",
      "whereEq",
      "without",
      "xprod",
      "zip",
      "zipObj",
      "zipWith"
    ]
  },
  {
    "name": "bson",
    "result": "Imports CJS (long, buffer)",
    "keys": null
  },
  {
    "name": "rsvp",
    "result": "ok",
    "keys": [
      "EventTarget",
      "Promise",
      "all",
      "allSettled",
      "asap",
      "async",
      "configure",
      "default",
      "defer",
      "denodeify",
      "filter",
      "hash",
      "hashSettled",
      "map",
      "off",
      "on",
      "race",
      "reject",
      "resolve",
      "rethrow"
    ]
  },
  {
    "name": "immutable",
    "result": "ok",
    "keys": [
      "Collection",
      "Iterable",
      "List",
      "Map",
      "OrderedMap",
      "OrderedSet",
      "Range",
      "Record",
      "Repeat",
      "Seq",
      "Set",
      "Stack",
      "default",
      "fromJS",
      "get",
      "getIn",
      "has",
      "hasIn",
      "hash",
      "is",
      "isAssociative",
      "isCollection",
      "isImmutable",
      "isIndexed",
      "isKeyed",
      "isOrdered",
      "isValueObject",
      "merge",
      "mergeDeep",
      "mergeDeepWith",
      "mergeWith",
      "remove",
      "removeIn",
      "set",
      "setIn",
      "update",
      "updateIn",
      "version"
    ]
  },
  {
    "name": "d3",
    "result": "ok",
    "keys": [
      "active",
      "arc",
      "area",
      "areaRadial",
      "ascending",
      "axisBottom",
      "axisLeft",
      "axisRight",
      "axisTop",
      "bisect",
      "bisectLeft",
      "bisectRight",
      "bisector",
      "blob",
      "brush",
      "brushSelection",
      "brushX",
      "brushY",
      "buffer",
      "chord",
      "clientPoint",
      "cluster",
      "color",
      "contourDensity",
      "contours",
      "create",
      "creator",
      "cross",
      "csv",
      "csvFormat",
      "csvFormatRows",
      "csvParse",
      "csvParseRows",
      "cubehelix",
      "curveBasis",
      "curveBasisClosed",
      "curveBasisOpen",
      "curveBundle",
      "curveCardinal",
      "curveCardinalClosed",
      "curveCardinalOpen",
      "curveCatmullRom",
      "curveCatmullRomClosed",
      "curveCatmullRomOpen",
      "curveLinear",
      "curveLinearClosed",
      "curveMonotoneX",
      "curveMonotoneY",
      "curveNatural",
      "curveStep",
      "curveStepAfter",
      "curveStepBefore",
      "customEvent",
      "descending",
      "deviation",
      "dispatch",
      "drag",
      "dragDisable",
      "dragEnable",
      "dsv",
      "dsvFormat",
      "easeBack",
      "easeBackIn",
      "easeBackInOut",
      "easeBackOut",
      "easeBounce",
      "easeBounceIn",
      "easeBounceInOut",
      "easeBounceOut",
      "easeCircle",
      "easeCircleIn",
      "easeCircleInOut",
      "easeCircleOut",
      "easeCubic",
      "easeCubicIn",
      "easeCubicInOut",
      "easeCubicOut",
      "easeElastic",
      "easeElasticIn",
      "easeElasticInOut",
      "easeElasticOut",
      "easeExp",
      "easeExpIn",
      "easeExpInOut",
      "easeExpOut",
      "easeLinear",
      "easePoly",
      "easePolyIn",
      "easePolyInOut",
      "easePolyOut",
      "easeQuad",
      "easeQuadIn",
      "easeQuadInOut",
      "easeQuadOut",
      "easeSin",
      "easeSinIn",
      "easeSinInOut",
      "easeSinOut",
      "entries",
      "event",
      "extent",
      "forceCenter",
      "forceCollide",
      "forceLink",
      "forceManyBody",
      "forceRadial",
      "forceSimulation",
      "forceX",
      "forceY",
      "format",
      "formatDefaultLocale",
      "formatLocale",
      "formatPrefix",
      "formatSpecifier",
      "geoAlbers",
      "geoAlbersUsa",
      "geoArea",
      "geoAzimuthalEqualArea",
      "geoAzimuthalEqualAreaRaw",
      "geoAzimuthalEquidistant",
      "geoAzimuthalEquidistantRaw",
      "geoBounds",
      "geoCentroid",
      "geoCircle",
      "geoClipAntimeridian",
      "geoClipCircle",
      "geoClipExtent",
      "geoClipRectangle",
      "geoConicConformal",
      "geoConicConformalRaw",
      "geoConicEqualArea",
      "geoConicEqualAreaRaw",
      "geoConicEquidistant",
      "geoConicEquidistantRaw",
      "geoContains",
      "geoDistance",
      "geoEqualEarth",
      "geoEqualEarthRaw",
      "geoEquirectangular",
      "geoEquirectangularRaw",
      "geoGnomonic",
      "geoGnomonicRaw",
      "geoGraticule",
      "geoGraticule10",
      "geoIdentity",
      "geoInterpolate",
      "geoLength",
      "geoMercator",
      "geoMercatorRaw",
      "geoNaturalEarth1",
      "geoNaturalEarth1Raw",
      "geoOrthographic",
      "geoOrthographicRaw",
      "geoPath",
      "geoProjection",
      "geoProjectionMutator",
      "geoRotation",
      "geoStereographic",
      "geoStereographicRaw",
      "geoStream",
      "geoTransform",
      "geoTransverseMercator",
      "geoTransverseMercatorRaw",
      "gray",
      "hcl",
      "hierarchy",
      "histogram",
      "hsl",
      "html",
      "image",
      "interpolate",
      "interpolateArray",
      "interpolateBasis",
      "interpolateBasisClosed",
      "interpolateBlues",
      "interpolateBrBG",
      "interpolateBuGn",
      "interpolateBuPu",
      "interpolateCool",
      "interpolateCubehelix",
      "interpolateCubehelixDefault",
      "interpolateCubehelixLong",
      "interpolateDate",
      "interpolateDiscrete",
      "interpolateGnBu",
      "interpolateGreens",
      "interpolateGreys",
      "interpolateHcl",
      "interpolateHclLong",
      "interpolateHsl",
      "interpolateHslLong",
      "interpolateHue",
      "interpolateInferno",
      "interpolateLab",
      "interpolateMagma",
      "interpolateNumber",
      "interpolateObject",
      "interpolateOrRd",
      "interpolateOranges",
      "interpolatePRGn",
      "interpolatePiYG",
      "interpolatePlasma",
      "interpolatePuBu",
      "interpolatePuBuGn",
      "interpolatePuOr",
      "interpolatePuRd",
      "interpolatePurples",
      "interpolateRainbow",
      "interpolateRdBu",
      "interpolateRdGy",
      "interpolateRdPu",
      "interpolateRdYlBu",
      "interpolateRdYlGn",
      "interpolateReds",
      "interpolateRgb",
      "interpolateRgbBasis",
      "interpolateRgbBasisClosed",
      "interpolateRound",
      "interpolateSinebow",
      "interpolateSpectral",
      "interpolateString",
      "interpolateTransformCss",
      "interpolateTransformSvg",
      "interpolateViridis",
      "interpolateWarm",
      "interpolateYlGn",
      "interpolateYlGnBu",
      "interpolateYlOrBr",
      "interpolateYlOrRd",
      "interpolateZoom",
      "interrupt",
      "interval",
      "isoFormat",
      "isoParse",
      "json",
      "keys",
      "lab",
      "lch",
      "line",
      "lineRadial",
      "linkHorizontal",
      "linkRadial",
      "linkVertical",
      "local",
      "map",
      "matcher",
      "max",
      "mean",
      "median",
      "merge",
      "min",
      "mouse",
      "namespace",
      "namespaces",
      "nest",
      "now",
      "pack",
      "packEnclose",
      "packSiblings",
      "pairs",
      "partition",
      "path",
      "permute",
      "pie",
      "piecewise",
      "pointRadial",
      "polygonArea",
      "polygonCentroid",
      "polygonContains",
      "polygonHull",
      "polygonLength",
      "precisionFixed",
      "precisionPrefix",
      "precisionRound",
      "quadtree",
      "quantile",
      "quantize",
      "radialArea",
      "radialLine",
      "randomBates",
      "randomExponential",
      "randomIrwinHall",
      "randomLogNormal",
      "randomNormal",
      "randomUniform",
      "range",
      "rgb",
      "ribbon",
      "scaleBand",
      "scaleDiverging",
      "scaleIdentity",
      "scaleImplicit",
      "scaleLinear",
      "scaleLog",
      "scaleOrdinal",
      "scalePoint",
      "scalePow",
      "scaleQuantile",
      "scaleQuantize",
      "scaleSequential",
      "scaleSqrt",
      "scaleThreshold",
      "scaleTime",
      "scaleUtc",
      "scan",
      "schemeAccent",
      "schemeBlues",
      "schemeBrBG",
      "schemeBuGn",
      "schemeBuPu",
      "schemeCategory10",
      "schemeDark2",
      "schemeGnBu",
      "schemeGreens",
      "schemeGreys",
      "schemeOrRd",
      "schemeOranges",
      "schemePRGn",
      "schemePaired",
      "schemePastel1",
      "schemePastel2",
      "schemePiYG",
      "schemePuBu",
      "schemePuBuGn",
      "schemePuOr",
      "schemePuRd",
      "schemePurples",
      "schemeRdBu",
      "schemeRdGy",
      "schemeRdPu",
      "schemeRdYlBu",
      "schemeRdYlGn",
      "schemeReds",
      "schemeSet1",
      "schemeSet2",
      "schemeSet3",
      "schemeSpectral",
      "schemeYlGn",
      "schemeYlGnBu",
      "schemeYlOrBr",
      "schemeYlOrRd",
      "select",
      "selectAll",
      "selection",
      "selector",
      "selectorAll",
      "set",
      "shuffle",
      "stack",
      "stackOffsetDiverging",
      "stackOffsetExpand",
      "stackOffsetNone",
      "stackOffsetSilhouette",
      "stackOffsetWiggle",
      "stackOrderAscending",
      "stackOrderDescending",
      "stackOrderInsideOut",
      "stackOrderNone",
      "stackOrderReverse",
      "stratify",
      "style",
      "sum",
      "svg",
      "symbol",
      "symbolCircle",
      "symbolCross",
      "symbolDiamond",
      "symbolSquare",
      "symbolStar",
      "symbolTriangle",
      "symbolWye",
      "symbols",
      "text",
      "thresholdFreedmanDiaconis",
      "thresholdScott",
      "thresholdSturges",
      "tickIncrement",
      "tickStep",
      "ticks",
      "timeDay",
      "timeDays",
      "timeFormat",
      "timeFormatDefaultLocale",
      "timeFormatLocale",
      "timeFriday",
      "timeFridays",
      "timeHour",
      "timeHours",
      "timeInterval",
      "timeMillisecond",
      "timeMilliseconds",
      "timeMinute",
      "timeMinutes",
      "timeMonday",
      "timeMondays",
      "timeMonth",
      "timeMonths",
      "timeParse",
      "timeSaturday",
      "timeSaturdays",
      "timeSecond",
      "timeSeconds",
      "timeSunday",
      "timeSundays",
      "timeThursday",
      "timeThursdays",
      "timeTuesday",
      "timeTuesdays",
      "timeWednesday",
      "timeWednesdays",
      "timeWeek",
      "timeWeeks",
      "timeYear",
      "timeYears",
      "timeout",
      "timer",
      "timerFlush",
      "touch",
      "touches",
      "transition",
      "transpose",
      "tree",
      "treemap",
      "treemapBinary",
      "treemapDice",
      "treemapResquarify",
      "treemapSlice",
      "treemapSliceDice",
      "treemapSquarify",
      "tsv",
      "tsvFormat",
      "tsvFormatRows",
      "tsvParse",
      "tsvParseRows",
      "utcDay",
      "utcDays",
      "utcFormat",
      "utcFriday",
      "utcFridays",
      "utcHour",
      "utcHours",
      "utcMillisecond",
      "utcMilliseconds",
      "utcMinute",
      "utcMinutes",
      "utcMonday",
      "utcMondays",
      "utcMonth",
      "utcMonths",
      "utcParse",
      "utcSaturday",
      "utcSaturdays",
      "utcSecond",
      "utcSeconds",
      "utcSunday",
      "utcSundays",
      "utcThursday",
      "utcThursdays",
      "utcTuesday",
      "utcTuesdays",
      "utcWednesday",
      "utcWednesdays",
      "utcWeek",
      "utcWeeks",
      "utcYear",
      "utcYears",
      "values",
      "variance",
      "version",
      "voronoi",
      "window",
      "xml",
      "zip",
      "zoom",
      "zoomIdentity",
      "zoomTransform"
    ]
  },
  {
    "name": "should",
    "result": "Imports CJS (should-format, should-type, should-type-adapters, should-util)",
    "keys": null
  },
  {
    "name": "bignumber.js",
    "result": "ok",
    "keys": [
      "BigNumber",
      "default"
    ]
  },
  {
    "name": "big.js",
    "result": "ok",
    "keys": [
      "Big",
      "default"
    ]
  },
  {
    "name": "diff",
    "result": "ok",
    "keys": [
      "Diff",
      "applyPatch",
      "applyPatches",
      "canonicalize",
      "convertChangesToDMP",
      "convertChangesToXML",
      "createPatch",
      "createTwoFilesPatch",
      "diffArrays",
      "diffChars",
      "diffCss",
      "diffJson",
      "diffLines",
      "diffSentences",
      "diffTrimmedLines",
      "diffWords",
      "diffWordsWithSpace",
      "merge",
      "parsePatch",
      "structuredPatch"
    ]
  },
  {
    "name": "whatwg-fetch",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "sinon",
    "result": "ok",
    "keys": [
      "FakeXMLHttpRequest",
      "addBehavior",
      "assert",
      "createFakeServer",
      "createFakeServerWithClock",
      "createSandbox",
      "createStubInstance",
      "default",
      "defaultConfig",
      "expectation",
      "fake",
      "fakeServer",
      "fakeServerWithClock",
      "getFakes",
      "getRestorers",
      "inject",
      "match",
      "mock",
      "replace",
      "replaceGetter",
      "replaceSetter",
      "reset",
      "resetBehavior",
      "resetHistory",
      "restore",
      "restoreContext",
      "sandbox",
      "serverPrototype",
      "setFormatter",
      "spy",
      "spyCall",
      "stub",
      "timers",
      "useFakeServer",
      "useFakeTimers",
      "useFakeXMLHttpRequest",
      "usingPromise",
      "verify",
      "verifyAndRestore",
      "xhr"
    ]
  },
  {
    "name": "punycode",
    "result": "ok",
    "keys": [
      "decode",
      "default",
      "encode",
      "toASCII",
      "toUnicode",
      "ucs2",
      "version"
    ]
  },
  {
    "name": "node-fetch",
    "result": "ok",
    "keys": [
      "FetchError",
      "Headers",
      "Request",
      "Response",
      "default"
    ]
  },
  {
    "name": "firebase",
    "result": "Imports CJS (core-js)",
    "keys": null
  },
  {
    "name": "should-equal",
    "result": "Imports CJS (should-type, should-type-adapters, should-util)",
    "keys": null
  },
  {
    "name": "redux",
    "result": "ok",
    "keys": [
      "__DO_NOT_USE__ActionTypes",
      "applyMiddleware",
      "bindActionCreators",
      "combineReducers",
      "compose",
      "createStore"
    ]
  },
  {
    "name": "crc",
    "result": "ok",
    "keys": [
      "crc1",
      "crc16",
      "crc16ccitt",
      "crc16kermit",
      "crc16modbus",
      "crc16xmodem",
      "crc24",
      "crc32",
      "crc8",
      "crc81wire",
      "crcjam",
      "default"
    ]
  },
  {
    "name": "three",
    "result": "ok",
    "keys": [
      "ACESFilmicToneMapping",
      "AddEquation",
      "AddOperation",
      "AdditiveBlending",
      "AlphaFormat",
      "AlwaysDepth",
      "AmbientLight",
      "AnimationClip",
      "AnimationLoader",
      "AnimationMixer",
      "AnimationObjectGroup",
      "AnimationUtils",
      "ArcCurve",
      "ArrayCamera",
      "ArrowHelper",
      "Audio",
      "AudioAnalyser",
      "AudioContext",
      "AudioListener",
      "AudioLoader",
      "AxesHelper",
      "AxisHelper",
      "BackSide",
      "BasicDepthPacking",
      "BasicShadowMap",
      "BinaryTextureLoader",
      "Bone",
      "BooleanKeyframeTrack",
      "BoundingBoxHelper",
      "Box2",
      "Box3",
      "Box3Helper",
      "BoxBufferGeometry",
      "BoxGeometry",
      "BoxHelper",
      "BufferAttribute",
      "BufferGeometry",
      "BufferGeometryLoader",
      "ByteType",
      "Cache",
      "Camera",
      "CameraHelper",
      "CanvasRenderer",
      "CanvasTexture",
      "CatmullRomCurve3",
      "CineonToneMapping",
      "CircleBufferGeometry",
      "CircleGeometry",
      "ClampToEdgeWrapping",
      "Clock",
      "ClosedSplineCurve3",
      "Color",
      "ColorKeyframeTrack",
      "CompressedTexture",
      "CompressedTextureLoader",
      "ConeBufferGeometry",
      "ConeGeometry",
      "CubeCamera",
      "CubeGeometry",
      "CubeReflectionMapping",
      "CubeRefractionMapping",
      "CubeTexture",
      "CubeTextureLoader",
      "CubeUVReflectionMapping",
      "CubeUVRefractionMapping",
      "CubicBezierCurve",
      "CubicBezierCurve3",
      "CubicInterpolant",
      "CullFaceBack",
      "CullFaceFront",
      "CullFaceFrontBack",
      "CullFaceNone",
      "Curve",
      "CurvePath",
      "CustomBlending",
      "CylinderBufferGeometry",
      "CylinderGeometry",
      "Cylindrical",
      "DataTexture",
      "DataTexture3D",
      "DataTextureLoader",
      "DefaultLoadingManager",
      "DepthFormat",
      "DepthStencilFormat",
      "DepthTexture",
      "DirectionalLight",
      "DirectionalLightHelper",
      "DirectionalLightShadow",
      "DiscreteInterpolant",
      "DodecahedronBufferGeometry",
      "DodecahedronGeometry",
      "DoubleSide",
      "DstAlphaFactor",
      "DstColorFactor",
      "DynamicBufferAttribute",
      "EdgesGeometry",
      "EdgesHelper",
      "EllipseCurve",
      "EqualDepth",
      "EquirectangularReflectionMapping",
      "EquirectangularRefractionMapping",
      "Euler",
      "EventDispatcher",
      "ExtrudeBufferGeometry",
      "ExtrudeGeometry",
      "Face3",
      "Face4",
      "FaceColors",
      "FaceNormalsHelper",
      "FileLoader",
      "FlatShading",
      "Float32Attribute",
      "Float32BufferAttribute",
      "Float64Attribute",
      "Float64BufferAttribute",
      "FloatType",
      "Fog",
      "FogExp2",
      "Font",
      "FontLoader",
      "FrontFaceDirectionCCW",
      "FrontFaceDirectionCW",
      "FrontSide",
      "Frustum",
      "GammaEncoding",
      "Geometry",
      "GeometryUtils",
      "GreaterDepth",
      "GreaterEqualDepth",
      "GridHelper",
      "Group",
      "HalfFloatType",
      "HemisphereLight",
      "HemisphereLightHelper",
      "IcosahedronBufferGeometry",
      "IcosahedronGeometry",
      "ImageBitmapLoader",
      "ImageLoader",
      "ImageUtils",
      "ImmediateRenderObject",
      "InstancedBufferAttribute",
      "InstancedBufferGeometry",
      "InstancedInterleavedBuffer",
      "Int16Attribute",
      "Int16BufferAttribute",
      "Int32Attribute",
      "Int32BufferAttribute",
      "Int8Attribute",
      "Int8BufferAttribute",
      "IntType",
      "InterleavedBuffer",
      "InterleavedBufferAttribute",
      "Interpolant",
      "InterpolateDiscrete",
      "InterpolateLinear",
      "InterpolateSmooth",
      "JSONLoader",
      "KeyframeTrack",
      "LOD",
      "LatheBufferGeometry",
      "LatheGeometry",
      "Layers",
      "LensFlare",
      "LessDepth",
      "LessEqualDepth",
      "Light",
      "LightShadow",
      "Line",
      "Line3",
      "LineBasicMaterial",
      "LineCurve",
      "LineCurve3",
      "LineDashedMaterial",
      "LineLoop",
      "LinePieces",
      "LineSegments",
      "LineStrip",
      "LinearEncoding",
      "LinearFilter",
      "LinearInterpolant",
      "LinearMipMapLinearFilter",
      "LinearMipMapNearestFilter",
      "LinearToneMapping",
      "Loader",
      "LoaderUtils",
      "LoadingManager",
      "LogLuvEncoding",
      "LoopOnce",
      "LoopPingPong",
      "LoopRepeat",
      "LuminanceAlphaFormat",
      "LuminanceFormat",
      "MOUSE",
      "Material",
      "MaterialLoader",
      "Math",
      "Matrix3",
      "Matrix4",
      "MaxEquation",
      "Mesh",
      "MeshBasicMaterial",
      "MeshDepthMaterial",
      "MeshDistanceMaterial",
      "MeshFaceMaterial",
      "MeshLambertMaterial",
      "MeshMatcapMaterial",
      "MeshNormalMaterial",
      "MeshPhongMaterial",
      "MeshPhysicalMaterial",
      "MeshStandardMaterial",
      "MeshToonMaterial",
      "MinEquation",
      "MirroredRepeatWrapping",
      "MixOperation",
      "MultiMaterial",
      "MultiplyBlending",
      "MultiplyOperation",
      "NearestFilter",
      "NearestMipMapLinearFilter",
      "NearestMipMapNearestFilter",
      "NeverDepth",
      "NoBlending",
      "NoColors",
      "NoToneMapping",
      "NormalBlending",
      "NotEqualDepth",
      "NumberKeyframeTrack",
      "Object3D",
      "ObjectLoader",
      "ObjectSpaceNormalMap",
      "OctahedronBufferGeometry",
      "OctahedronGeometry",
      "OneFactor",
      "OneMinusDstAlphaFactor",
      "OneMinusDstColorFactor",
      "OneMinusSrcAlphaFactor",
      "OneMinusSrcColorFactor",
      "OrthographicCamera",
      "PCFShadowMap",
      "PCFSoftShadowMap",
      "ParametricBufferGeometry",
      "ParametricGeometry",
      "Particle",
      "ParticleBasicMaterial",
      "ParticleSystem",
      "ParticleSystemMaterial",
      "Path",
      "PerspectiveCamera",
      "Plane",
      "PlaneBufferGeometry",
      "PlaneGeometry",
      "PlaneHelper",
      "PointCloud",
      "PointCloudMaterial",
      "PointLight",
      "PointLightHelper",
      "Points",
      "PointsMaterial",
      "PolarGridHelper",
      "PolyhedronBufferGeometry",
      "PolyhedronGeometry",
      "PositionalAudio",
      "Projector",
      "PropertyBinding",
      "PropertyMixer",
      "QuadraticBezierCurve",
      "QuadraticBezierCurve3",
      "Quaternion",
      "QuaternionKeyframeTrack",
      "QuaternionLinearInterpolant",
      "REVISION",
      "RGBADepthPacking",
      "RGBAFormat",
      "RGBA_ASTC_10x10_Format",
      "RGBA_ASTC_10x5_Format",
      "RGBA_ASTC_10x6_Format",
      "RGBA_ASTC_10x8_Format",
      "RGBA_ASTC_12x10_Format",
      "RGBA_ASTC_12x12_Format",
      "RGBA_ASTC_4x4_Format",
      "RGBA_ASTC_5x4_Format",
      "RGBA_ASTC_5x5_Format",
      "RGBA_ASTC_6x5_Format",
      "RGBA_ASTC_6x6_Format",
      "RGBA_ASTC_8x5_Format",
      "RGBA_ASTC_8x6_Format",
      "RGBA_ASTC_8x8_Format",
      "RGBA_PVRTC_2BPPV1_Format",
      "RGBA_PVRTC_4BPPV1_Format",
      "RGBA_S3TC_DXT1_Format",
      "RGBA_S3TC_DXT3_Format",
      "RGBA_S3TC_DXT5_Format",
      "RGBDEncoding",
      "RGBEEncoding",
      "RGBEFormat",
      "RGBFormat",
      "RGBM16Encoding",
      "RGBM7Encoding",
      "RGB_ETC1_Format",
      "RGB_PVRTC_2BPPV1_Format",
      "RGB_PVRTC_4BPPV1_Format",
      "RGB_S3TC_DXT1_Format",
      "RawShaderMaterial",
      "Ray",
      "Raycaster",
      "RectAreaLight",
      "RectAreaLightHelper",
      "RedFormat",
      "ReinhardToneMapping",
      "RepeatWrapping",
      "ReverseSubtractEquation",
      "RingBufferGeometry",
      "RingGeometry",
      "Scene",
      "SceneUtils",
      "ShaderChunk",
      "ShaderLib",
      "ShaderMaterial",
      "ShadowMaterial",
      "Shape",
      "ShapeBufferGeometry",
      "ShapeGeometry",
      "ShapePath",
      "ShapeUtils",
      "ShortType",
      "Skeleton",
      "SkeletonHelper",
      "SkinnedMesh",
      "SmoothShading",
      "Sphere",
      "SphereBufferGeometry",
      "SphereGeometry",
      "Spherical",
      "SphericalReflectionMapping",
      "Spline",
      "SplineCurve",
      "SplineCurve3",
      "SpotLight",
      "SpotLightHelper",
      "SpotLightShadow",
      "Sprite",
      "SpriteMaterial",
      "SrcAlphaFactor",
      "SrcAlphaSaturateFactor",
      "SrcColorFactor",
      "StereoCamera",
      "StringKeyframeTrack",
      "SubtractEquation",
      "SubtractiveBlending",
      "TangentSpaceNormalMap",
      "TetrahedronBufferGeometry",
      "TetrahedronGeometry",
      "TextBufferGeometry",
      "TextGeometry",
      "Texture",
      "TextureLoader",
      "TorusBufferGeometry",
      "TorusGeometry",
      "TorusKnotBufferGeometry",
      "TorusKnotGeometry",
      "Triangle",
      "TriangleFanDrawMode",
      "TriangleStripDrawMode",
      "TrianglesDrawMode",
      "TubeBufferGeometry",
      "TubeGeometry",
      "UVMapping",
      "Uint16Attribute",
      "Uint16BufferAttribute",
      "Uint32Attribute",
      "Uint32BufferAttribute",
      "Uint8Attribute",
      "Uint8BufferAttribute",
      "Uint8ClampedAttribute",
      "Uint8ClampedBufferAttribute",
      "Uncharted2ToneMapping",
      "Uniform",
      "UniformsLib",
      "UniformsUtils",
      "UnsignedByteType",
      "UnsignedInt248Type",
      "UnsignedIntType",
      "UnsignedShort4444Type",
      "UnsignedShort5551Type",
      "UnsignedShort565Type",
      "UnsignedShortType",
      "Vector2",
      "Vector3",
      "Vector4",
      "VectorKeyframeTrack",
      "Vertex",
      "VertexColors",
      "VertexNormalsHelper",
      "VideoTexture",
      "WebGLRenderTarget",
      "WebGLRenderTargetCube",
      "WebGLRenderer",
      "WebGLUtils",
      "WireframeGeometry",
      "WireframeHelper",
      "WrapAroundEnding",
      "XHRLoader",
      "ZeroCurvatureEnding",
      "ZeroFactor",
      "ZeroSlopeEnding",
      "sRGBEncoding"
    ]
  },
  {
    "name": "gl-matrix",
    "result": "ok",
    "keys": [
      "glMatrix",
      "mat2",
      "mat2d",
      "mat3",
      "mat4",
      "quat",
      "quat2",
      "vec2",
      "vec3",
      "vec4"
    ]
  },
  {
    "name": "vue",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "sift",
    "result": "ok",
    "keys": [
      "compare",
      "default",
      "indexOf"
    ]
  },
  {
    "name": "pouchdb",
    "result": "Imports CJS (inherits)",
    "keys": null
  },
  {
    "name": "hashids",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "react-bootstrap",
    "result": "Imports CJS (warning)",
    "keys": null
  },
  {
    "name": "react-router",
    "result": "Imports CJS (warning)",
    "keys": null
  },
  {
    "name": "history",
    "result": "Imports CJS (warning)",
    "keys": null
  },
  {
    "name": "riot",
    "result": "Imports CJS (riot-observable)",
    "keys": null
  },
  {
    "name": "page",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "ractive",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "radium",
    "result": "Imports CJS (inline-style-prefixer)",
    "keys": null
  },
  {
    "name": "lolex",
    "result": "Uses CJS variables (require)",
    "keys": []
  },
  {
    "name": "react-redux",
    "result": "Imports CJS (hoist-non-react-statics)",
    "keys": null
  },
  {
    "name": "kefir",
    "result": "ok",
    "keys": [
      "Kefir",
      "Observable",
      "Pool",
      "Property",
      "Stream",
      "combine",
      "concat",
      "constant",
      "constantError",
      "default",
      "dissableDeprecationWarnings",
      "fromCallback",
      "fromESObservable",
      "fromEvents",
      "fromNodeCallback",
      "fromPoll",
      "fromPromise",
      "interval",
      "later",
      "merge",
      "never",
      "pool",
      "repeat",
      "sequentially",
      "staticLand",
      "stream",
      "withInterval",
      "zip"
    ]
  },
  {
    "name": "backbone.marionette",
    "result": "Imports CJS (backbone)",
    "keys": null
  },
  {
    "name": "topojson",
    "result": "ok",
    "keys": [
      "bbox",
      "feature",
      "filter",
      "filterAttached",
      "filterAttachedWeight",
      "filterWeight",
      "merge",
      "mergeArcs",
      "mesh",
      "meshArcs",
      "neighbors",
      "planarRingArea",
      "planarTriangleArea",
      "presimplify",
      "quantile",
      "quantize",
      "simplify",
      "sphericalRingArea",
      "sphericalTriangleArea",
      "topology",
      "transform",
      "untransform"
    ]
  },
  {
    "name": "deepcopy",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "promise-polyfill",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "jsondiffpatch",
    "result": "Imports CJS (diff-match-patch, chalk)",
    "keys": null
  },
  {
    "name": "yaml-front-matter",
    "result": "Uses CJS variables (require)",
    "keys": null
  },
  {
    "name": "material-ui",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "angular-ui-router",
    "result": "Imports CJS (angular)",
    "keys": null
  },
  {
    "name": "graphql",
    "result": "ok",
    "keys": [
      "BREAK",
      "BreakingChangeType",
      "DEFAULT_DEPRECATION_REASON",
      "DangerousChangeType",
      "DirectiveLocation",
      "FieldsOnCorrectTypeRule",
      "FragmentsOnCompositeTypesRule",
      "GraphQLBoolean",
      "GraphQLDeprecatedDirective",
      "GraphQLDirective",
      "GraphQLEnumType",
      "GraphQLError",
      "GraphQLFloat",
      "GraphQLID",
      "GraphQLIncludeDirective",
      "GraphQLInputObjectType",
      "GraphQLInt",
      "GraphQLInterfaceType",
      "GraphQLList",
      "GraphQLNonNull",
      "GraphQLObjectType",
      "GraphQLScalarType",
      "GraphQLSchema",
      "GraphQLSkipDirective",
      "GraphQLString",
      "GraphQLUnionType",
      "Kind",
      "KnownArgumentNamesRule",
      "KnownDirectivesRule",
      "KnownFragmentNamesRule",
      "KnownTypeNamesRule",
      "LoneAnonymousOperationRule",
      "NoFragmentCyclesRule",
      "NoUndefinedVariablesRule",
      "NoUnusedFragmentsRule",
      "NoUnusedVariablesRule",
      "OverlappingFieldsCanBeMergedRule",
      "PossibleFragmentSpreadsRule",
      "ProvidedRequiredArgumentsRule",
      "ScalarLeafsRule",
      "SchemaMetaFieldDef",
      "SingleFieldSubscriptionsRule",
      "Source",
      "TokenKind",
      "TypeInfo",
      "TypeKind",
      "TypeMetaFieldDef",
      "TypeNameMetaFieldDef",
      "UniqueArgumentNamesRule",
      "UniqueDirectivesPerLocationRule",
      "UniqueFragmentNamesRule",
      "UniqueInputFieldNamesRule",
      "UniqueOperationNamesRule",
      "UniqueVariableNamesRule",
      "ValidationContext",
      "ValuesOfCorrectTypeRule",
      "VariablesAreInputTypesRule",
      "VariablesInAllowedPositionRule",
      "__Directive",
      "__DirectiveLocation",
      "__EnumValue",
      "__Field",
      "__InputValue",
      "__Schema",
      "__Type",
      "__TypeKind",
      "assertAbstractType",
      "assertCompositeType",
      "assertDirective",
      "assertEnumType",
      "assertInputObjectType",
      "assertInputType",
      "assertInterfaceType",
      "assertLeafType",
      "assertListType",
      "assertNamedType",
      "assertNonNullType",
      "assertNullableType",
      "assertObjectType",
      "assertOutputType",
      "assertScalarType",
      "assertSchema",
      "assertType",
      "assertUnionType",
      "assertValidName",
      "assertValidSchema",
      "assertWrappingType",
      "astFromValue",
      "buildASTSchema",
      "buildClientSchema",
      "buildSchema",
      "coerceValue",
      "concatAST",
      "createSourceEventStream",
      "defaultFieldResolver",
      "doTypesOverlap",
      "execute",
      "extendSchema",
      "findBreakingChanges",
      "findDangerousChanges",
      "findDeprecatedUsages",
      "formatError",
      "getDescription",
      "getDirectiveValues",
      "getIntrospectionQuery",
      "getLocation",
      "getNamedType",
      "getNullableType",
      "getOperationAST",
      "getOperationRootType",
      "getVisitFn",
      "graphql",
      "graphqlSync",
      "introspectionFromSchema",
      "introspectionQuery",
      "introspectionTypes",
      "isAbstractType",
      "isCompositeType",
      "isDefinitionNode",
      "isDirective",
      "isEnumType",
      "isEqualType",
      "isExecutableDefinitionNode",
      "isInputObjectType",
      "isInputType",
      "isInterfaceType",
      "isIntrospectionType",
      "isLeafType",
      "isListType",
      "isNamedType",
      "isNonNullType",
      "isNullableType",
      "isObjectType",
      "isOutputType",
      "isRequiredArgument",
      "isRequiredInputField",
      "isScalarType",
      "isSchema",
      "isSelectionNode",
      "isSpecifiedDirective",
      "isSpecifiedScalarType",
      "isType",
      "isTypeDefinitionNode",
      "isTypeExtensionNode",
      "isTypeNode",
      "isTypeSubTypeOf",
      "isTypeSystemDefinitionNode",
      "isTypeSystemExtensionNode",
      "isUnionType",
      "isValidJSValue",
      "isValidLiteralValue",
      "isValidNameError",
      "isValueNode",
      "isWrappingType",
      "lexicographicSortSchema",
      "parse",
      "parseType",
      "parseValue",
      "print",
      "printError",
      "printIntrospectionSchema",
      "printSchema",
      "printType",
      "responsePathAsArray",
      "separateOperations",
      "specifiedDirectives",
      "specifiedRules",
      "specifiedScalarTypes",
      "subscribe",
      "typeFromAST",
      "validate",
      "validateSchema",
      "valueFromAST",
      "valueFromASTUntyped",
      "visit",
      "visitInParallel",
      "visitWithTypeInfo"
    ]
  },
  {
    "name": "rxjs",
    "result": "ok",
    "keys": [
      "ArgumentOutOfRangeError",
      "AsyncSubject",
      "BehaviorSubject",
      "ConnectableObservable",
      "EMPTY",
      "EmptyError",
      "GroupedObservable",
      "NEVER",
      "Notification",
      "ObjectUnsubscribedError",
      "Observable",
      "ReplaySubject",
      "Scheduler",
      "Subject",
      "Subscriber",
      "Subscription",
      "TimeoutError",
      "UnsubscriptionError",
      "VirtualAction",
      "VirtualTimeScheduler",
      "animationFrameScheduler",
      "asapScheduler",
      "asyncScheduler",
      "bindCallback",
      "bindNodeCallback",
      "combineLatest",
      "concat",
      "config",
      "defer",
      "empty",
      "forkJoin",
      "from",
      "fromEvent",
      "fromEventPattern",
      "generate",
      "identity",
      "iif",
      "interval",
      "isObservable",
      "merge",
      "never",
      "noop",
      "observable",
      "of",
      "onErrorResumeNext",
      "pairs",
      "pipe",
      "queueScheduler",
      "race",
      "range",
      "throwError",
      "timer",
      "using",
      "zip"
    ]
  },
  {
    "name": "jimp",
    "result": "Imports CJS (timm)",
    "keys": null
  },
  {
    "name": "dropbox",
    "result": "Invalid ESM",
    "keys": null
  },
  {
    "name": "decimal.js",
    "result": "ok",
    "keys": [
      "Decimal",
      "default"
    ]
  },
  {
    "name": "simple-statistics",
    "result": "ok",
    "keys": [
      "BayesianClassifier",
      "PerceptronModel",
      "addToMean",
      "average",
      "bayesian",
      "bernoulliDistribution",
      "binomialDistribution",
      "bisect",
      "chiSquaredDistributionTable",
      "chiSquaredGoodnessOfFit",
      "chunk",
      "ckmeans",
      "combinations",
      "combinationsReplacement",
      "combineMeans",
      "combineVariances",
      "cumulativeStdNormalProbability",
      "epsilon",
      "equalIntervalBreaks",
      "erf",
      "errorFunction",
      "extent",
      "extentSorted",
      "factorial",
      "gamma",
      "gammaln",
      "geometricMean",
      "harmonicMean",
      "interquartileRange",
      "inverseErrorFunction",
      "iqr",
      "kde",
      "kernelDensityEstimation",
      "linearRegression",
      "linearRegressionLine",
      "mad",
      "max",
      "maxSorted",
      "mean",
      "median",
      "medianAbsoluteDeviation",
      "medianSorted",
      "min",
      "minSorted",
      "mode",
      "modeFast",
      "modeSorted",
      "numericSort",
      "perceptron",
      "permutationTest",
      "permutationsHeap",
      "poissonDistribution",
      "probit",
      "product",
      "quantile",
      "quantileRank",
      "quantileRankSorted",
      "quantileSorted",
      "quickselect",
      "rSquared",
      "rms",
      "rootMeanSquare",
      "sample",
      "sampleCorrelation",
      "sampleCovariance",
      "sampleKurtosis",
      "sampleSkewness",
      "sampleStandardDeviation",
      "sampleVariance",
      "sampleWithReplacement",
      "shuffle",
      "shuffleInPlace",
      "sign",
      "standardDeviation",
      "standardNormalTable",
      "subtractFromMean",
      "sum",
      "sumNthPowerDeviations",
      "sumSimple",
      "tTest",
      "tTestTwoSample",
      "uniqueCountSorted",
      "variance",
      "zScore"
    ]
  },
  {
    "name": "simple-html-tokenizer",
    "result": "ok",
    "keys": [
      "EntityParser",
      "EventedTokenizer",
      "HTML5NamedCharRefs",
      "Tokenizer",
      "tokenize"
    ]
  },
  {
    "name": "kronos-step",
    "result": "Imports CJS (fast-safe-stringify)",
    "keys": null
  },
  {
    "name": "proj4",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "vlq",
    "result": "ok",
    "keys": [
      "decode",
      "encode"
    ]
  },
  {
    "name": "mgrs",
    "result": "ok",
    "keys": [
      "default",
      "forward",
      "inverse",
      "toPoint"
    ]
  },
  {
    "name": "d3-color",
    "result": "ok",
    "keys": [
      "color",
      "cubehelix",
      "gray",
      "hcl",
      "hsl",
      "lab",
      "lch",
      "rgb"
    ]
  },
  {
    "name": "autolinker",
    "result": "ok",
    "keys": [
      "AnchorTagBuilder",
      "Autolinker",
      "EmailMatch",
      "EmailMatcher",
      "HashtagMatch",
      "HashtagMatcher",
      "HtmlTag",
      "Match",
      "Matcher",
      "MentionMatch",
      "MentionMatcher",
      "PhoneMatch",
      "PhoneMatcher",
      "UrlMatch",
      "UrlMatcher",
      "default"
    ]
  },
  {
    "name": "ml-matrix",
    "result": "Imports CJS (is-any-array)",
    "keys": null
  },
  {
    "name": "inline-style-prefixer",
    "result": "Imports CJS (css-in-js-utils/lib/isPrefixedValue)",
    "keys": null
  },
  {
    "name": "css-animation",
    "result": "Imports CJS (babel-runtime/helpers/typeof)",
    "keys": null
  },
  {
    "name": "redux-thunk",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "json2csv",
    "result": "ok",
    "keys": [
      "Parser",
      "Transform",
      "default",
      "parse"
    ]
  },
  {
    "name": "js-csp",
    "result": "Imports CJS (lodash/noop)",
    "keys": null
  },
  {
    "name": "redux-actions",
    "result": "Imports CJS (invariant)",
    "keys": null
  },
  {
    "name": "most",
    "result": "ok",
    "keys": [
      "PropagateTask",
      "Stream",
      "ap",
      "await",
      "awaitPromises",
      "chain",
      "combine",
      "combineArray",
      "concat",
      "concatMap",
      "constant",
      "continueWith",
      "debounce",
      "defaultScheduler",
      "delay",
      "distinct",
      "distinctBy",
      "drain",
      "during",
      "empty",
      "filter",
      "flatMap",
      "flatMapEnd",
      "flatMapError",
      "forEach",
      "from",
      "fromEvent",
      "fromPromise",
      "generate",
      "iterate",
      "join",
      "just",
      "loop",
      "map",
      "merge",
      "mergeArray",
      "mergeConcurrently",
      "multicast",
      "never",
      "observe",
      "of",
      "periodic",
      "recoverWith",
      "reduce",
      "sample",
      "sampleArray",
      "sampleWith",
      "scan",
      "since",
      "skip",
      "skipAfter",
      "skipRepeats",
      "skipRepeatsWith",
      "skipUntil",
      "skipWhile",
      "slice",
      "startWith",
      "switch",
      "switchLatest",
      "take",
      "takeUntil",
      "takeWhile",
      "tap",
      "throttle",
      "throwError",
      "timestamp",
      "transduce",
      "unfold",
      "until",
      "zip",
      "zipArray"
    ]
  },
  {
    "name": "rollup",
    "result": "ok",
    "keys": [
      "VERSION",
      "rollup",
      "watch"
    ]
  },
  {
    "name": "video.js",
    "result": "Imports CJS (videojs-vtt)",
    "keys": null
  },
  {
    "name": "document-register-element",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "rc-animate",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "opentype.js",
    "result": "Imports CJS (string)",
    "keys": null
  },
  {
    "name": "d3-dsv",
    "result": "ok",
    "keys": [
      "csvFormat",
      "csvFormatRows",
      "csvParse",
      "csvParseRows",
      "dsvFormat",
      "tsvFormat",
      "tsvFormatRows",
      "tsvParse",
      "tsvParseRows"
    ]
  },
  {
    "name": "gsap",
    "result": "ok",
    "keys": [
      "AttrPlugin",
      "Back",
      "BezierPlugin",
      "Bounce",
      "CSSPlugin",
      "Circ",
      "DirectionalRotationPlugin",
      "Ease",
      "Elastic",
      "Expo",
      "ExpoScaleEase",
      "Linear",
      "Power0",
      "Power1",
      "Power2",
      "Power3",
      "Power4",
      "RoughEase",
      "RoundPropsPlugin",
      "Sine",
      "SlowMo",
      "SteppedEase",
      "TimelineLite",
      "TimelineMax",
      "TweenLite",
      "TweenMax",
      "TweenPlugin",
      "_gsScope",
      "default"
    ]
  },
  {
    "name": "inflected",
    "result": "ok",
    "keys": [
      "camelize",
      "capitalize",
      "classify",
      "constantify",
      "dasherize",
      "foreignKey",
      "humanize",
      "inflections",
      "ordinal",
      "ordinalize",
      "parameterize",
      "pluralize",
      "singularize",
      "tableize",
      "titleize",
      "transliterate",
      "transliterations",
      "underscore"
    ]
  },
  {
    "name": "d3-selection",
    "result": "ok",
    "keys": [
      "clientPoint",
      "create",
      "creator",
      "customEvent",
      "event",
      "local",
      "matcher",
      "mouse",
      "namespace",
      "namespaces",
      "select",
      "selectAll",
      "selection",
      "selector",
      "selectorAll",
      "style",
      "touch",
      "touches",
      "window"
    ]
  },
  {
    "name": "react-intl",
    "result": "Imports CJS (hoist-non-react-statics)",
    "keys": null
  },
  {
    "name": "rc-trigger",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "livereload-js",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "shapefile",
    "result": "ok",
    "keys": [
      "open",
      "openDbf",
      "openShp",
      "read"
    ]
  },
  {
    "name": "i18next",
    "result": "ok",
    "keys": [
      "changeLanguage",
      "cloneInstance",
      "createInstance",
      "default",
      "dir",
      "exists",
      "getFixedT",
      "init",
      "loadLanguages",
      "loadNamespaces",
      "loadResources",
      "off",
      "on",
      "setDefaultNamespace",
      "t",
      "use"
    ]
  },
  {
    "name": "form-urlencoded",
    "result": "Imports CJS (form-urlencoded)",
    "keys": null
  },
  {
    "name": "cowsay",
    "result": "Not ESM (cows)",
    "keys": null
  },
  {
    "name": "reduce-reducers",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "pouchdb-promise",
    "result": "Imports CJS (lie)",
    "keys": null
  },
  {
    "name": "react-onclickoutside",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "es6-error",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "magic-string",
    "result": "ok",
    "keys": [
      "Bundle",
      "SourceMap",
      "default"
    ]
  },
  {
    "name": "react-element-to-jsx-string",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "riot-compiler",
    "result": "Imports CJS (riot-tmpl)",
    "keys": null
  },
  {
    "name": "rrule",
    "result": "ok",
    "keys": [
      "Frequency",
      "RRule",
      "RRuleSet",
      "Weekday",
      "default",
      "rrulestr"
    ]
  },
  {
    "name": "loglevel-mixin",
    "result": "ok",
    "keys": [
      "LogLevelMixin",
      "declareLevels",
      "defaultLogLevels",
      "defineLogLevelProperties",
      "defineLoggerMethods",
      "makeLogEvent"
    ]
  },
  {
    "name": "array-to-sentence",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "pouchdb-collate",
    "result": "ok",
    "keys": [
      "collate",
      "normalizeKey",
      "parseIndexableString",
      "toIndexableString"
    ]
  },
  {
    "name": "rollup-pluginutils",
    "result": "Imports CJS (micromatch)",
    "keys": null
  },
  {
    "name": "cerebral",
    "result": "Imports CJS (eventemitter3)",
    "keys": null
  },
  {
    "name": "more-events",
    "result": "ok",
    "keys": [
      "Emitter"
    ]
  },
  {
    "name": "react-select",
    "result": "Imports CJS (react-input-autosize)",
    "keys": null
  },
  {
    "name": "mingo",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "expression-expander",
    "result": "ok",
    "keys": [
      "createContext"
    ]
  },
  {
    "name": "d3-scale",
    "result": "ok",
    "keys": [
      "scaleBand",
      "scaleDiverging",
      "scaleIdentity",
      "scaleImplicit",
      "scaleLinear",
      "scaleLog",
      "scaleOrdinal",
      "scalePoint",
      "scalePow",
      "scaleQuantile",
      "scaleQuantize",
      "scaleSequential",
      "scaleSqrt",
      "scaleThreshold",
      "scaleTime",
      "scaleUtc"
    ]
  },
  {
    "name": "route-recognizer",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "core-decorators",
    "result": "ok",
    "keys": [
      "applyDecorators",
      "autobind",
      "debounce",
      "decorate",
      "deprecate",
      "deprecated",
      "enumerable",
      "extendDescriptor",
      "lazyInitialize",
      "memoize",
      "mixin",
      "mixins",
      "nonconfigurable",
      "nonenumerable",
      "override",
      "profile",
      "readonly",
      "suppressWarnings",
      "throttle",
      "time"
    ]
  },
  {
    "name": "statetransition-mixin",
    "result": "ok",
    "keys": [
      "BaseMethods",
      "StateTransitionMixin",
      "defineActionMethods",
      "defineStateTransitionProperties",
      "prepareActions"
    ]
  },
  {
    "name": "react-overlays",
    "result": "Imports CJS (uncontrollable)",
    "keys": null
  },
  {
    "name": "twemoji",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "nightingale",
    "result": "ok",
    "keys": [
      "Level",
      "addConfig",
      "configure",
      "default",
      "levels",
      "listenUnhandledErrors"
    ]
  },
  {
    "name": "purify-css",
    "result": "Imports CJS (glob)",
    "keys": null
  },
  {
    "name": "d3-geo-projection",
    "result": "ok",
    "keys": [
      "geoAiry",
      "geoAiryRaw",
      "geoAitoff",
      "geoAitoffRaw",
      "geoArmadillo",
      "geoArmadilloRaw",
      "geoAugust",
      "geoAugustRaw",
      "geoBaker",
      "geoBakerRaw",
      "geoBerghaus",
      "geoBerghausRaw",
      "geoBertin1953",
      "geoBertin1953Raw",
      "geoBoggs",
      "geoBoggsRaw",
      "geoBonne",
      "geoBonneRaw",
      "geoBottomley",
      "geoBottomleyRaw",
      "geoBromley",
      "geoBromleyRaw",
      "geoChamberlin",
      "geoChamberlinAfrica",
      "geoChamberlinRaw",
      "geoCollignon",
      "geoCollignonRaw",
      "geoCraig",
      "geoCraigRaw",
      "geoCraster",
      "geoCrasterRaw",
      "geoCylindricalEqualArea",
      "geoCylindricalEqualAreaRaw",
      "geoCylindricalStereographic",
      "geoCylindricalStereographicRaw",
      "geoEckert1",
      "geoEckert1Raw",
      "geoEckert2",
      "geoEckert2Raw",
      "geoEckert3",
      "geoEckert3Raw",
      "geoEckert4",
      "geoEckert4Raw",
      "geoEckert5",
      "geoEckert5Raw",
      "geoEckert6",
      "geoEckert6Raw",
      "geoEisenlohr",
      "geoEisenlohrRaw",
      "geoFahey",
      "geoFaheyRaw",
      "geoFoucaut",
      "geoFoucautRaw",
      "geoFoucautSinusoidal",
      "geoFoucautSinusoidalRaw",
      "geoGilbert",
      "geoGingery",
      "geoGingeryRaw",
      "geoGinzburg4",
      "geoGinzburg4Raw",
      "geoGinzburg5",
      "geoGinzburg5Raw",
      "geoGinzburg6",
      "geoGinzburg6Raw",
      "geoGinzburg8",
      "geoGinzburg8Raw",
      "geoGinzburg9",
      "geoGinzburg9Raw",
      "geoGringorten",
      "geoGringortenQuincuncial",
      "geoGringortenRaw",
      "geoGuyou",
      "geoGuyouRaw",
      "geoHammer",
      "geoHammerRaw",
      "geoHammerRetroazimuthal",
      "geoHammerRetroazimuthalRaw",
      "geoHealpix",
      "geoHealpixRaw",
      "geoHill",
      "geoHillRaw",
      "geoHomolosine",
      "geoHomolosineRaw",
      "geoHufnagel",
      "geoHufnagelRaw",
      "geoHyperelliptical",
      "geoHyperellipticalRaw",
      "geoInterrupt",
      "geoInterruptedBoggs",
      "geoInterruptedHomolosine",
      "geoInterruptedMollweide",
      "geoInterruptedMollweideHemispheres",
      "geoInterruptedSinuMollweide",
      "geoInterruptedSinusoidal",
      "geoKavrayskiy7",
      "geoKavrayskiy7Raw",
      "geoLagrange",
      "geoLagrangeRaw",
      "geoLarrivee",
      "geoLarriveeRaw",
      "geoLaskowski",
      "geoLaskowskiRaw",
      "geoLittrow",
      "geoLittrowRaw",
      "geoLoximuthal",
      "geoLoximuthalRaw",
      "geoMiller",
      "geoMillerRaw",
      "geoModifiedStereographic",
      "geoModifiedStereographicAlaska",
      "geoModifiedStereographicGs48",
      "geoModifiedStereographicGs50",
      "geoModifiedStereographicLee",
      "geoModifiedStereographicMiller",
      "geoModifiedStereographicRaw",
      "geoMollweide",
      "geoMollweideRaw",
      "geoMtFlatPolarParabolic",
      "geoMtFlatPolarParabolicRaw",
      "geoMtFlatPolarQuartic",
      "geoMtFlatPolarQuarticRaw",
      "geoMtFlatPolarSinusoidal",
      "geoMtFlatPolarSinusoidalRaw",
      "geoNaturalEarth",
      "geoNaturalEarth2",
      "geoNaturalEarth2Raw",
      "geoNaturalEarthRaw",
      "geoNellHammer",
      "geoNellHammerRaw",
      "geoPatterson",
      "geoPattersonRaw",
      "geoPeirceQuincuncial",
      "geoPierceQuincuncial",
      "geoPolyconic",
      "geoPolyconicRaw",
      "geoPolyhedral",
      "geoPolyhedralButterfly",
      "geoPolyhedralCollignon",
      "geoPolyhedralWaterman",
      "geoProject",
      "geoQuantize",
      "geoQuincuncial",
      "geoRectangularPolyconic",
      "geoRectangularPolyconicRaw",
      "geoRobinson",
      "geoRobinsonRaw",
      "geoSatellite",
      "geoSatelliteRaw",
      "geoSinuMollweide",
      "geoSinuMollweideRaw",
      "geoSinusoidal",
      "geoSinusoidalRaw",
      "geoStitch",
      "geoTimes",
      "geoTimesRaw",
      "geoTwoPointAzimuthal",
      "geoTwoPointAzimuthalRaw",
      "geoTwoPointAzimuthalUsa",
      "geoTwoPointEquidistant",
      "geoTwoPointEquidistantRaw",
      "geoTwoPointEquidistantUsa",
      "geoVanDerGrinten",
      "geoVanDerGrinten2",
      "geoVanDerGrinten2Raw",
      "geoVanDerGrinten3",
      "geoVanDerGrinten3Raw",
      "geoVanDerGrinten4",
      "geoVanDerGrinten4Raw",
      "geoVanDerGrintenRaw",
      "geoWagner",
      "geoWagner4",
      "geoWagner4Raw",
      "geoWagner6",
      "geoWagner6Raw",
      "geoWagner7",
      "geoWagner7Raw",
      "geoWagnerRaw",
      "geoWiechel",
      "geoWiechelRaw",
      "geoWinkel3",
      "geoWinkel3Raw"
    ]
  },
  {
    "name": "d3-time",
    "result": "ok",
    "keys": [
      "timeDay",
      "timeDays",
      "timeFriday",
      "timeFridays",
      "timeHour",
      "timeHours",
      "timeInterval",
      "timeMillisecond",
      "timeMilliseconds",
      "timeMinute",
      "timeMinutes",
      "timeMonday",
      "timeMondays",
      "timeMonth",
      "timeMonths",
      "timeSaturday",
      "timeSaturdays",
      "timeSecond",
      "timeSeconds",
      "timeSunday",
      "timeSundays",
      "timeThursday",
      "timeThursdays",
      "timeTuesday",
      "timeTuesdays",
      "timeWednesday",
      "timeWednesdays",
      "timeWeek",
      "timeWeeks",
      "timeYear",
      "timeYears",
      "utcDay",
      "utcDays",
      "utcFriday",
      "utcFridays",
      "utcHour",
      "utcHours",
      "utcMillisecond",
      "utcMilliseconds",
      "utcMinute",
      "utcMinutes",
      "utcMonday",
      "utcMondays",
      "utcMonth",
      "utcMonths",
      "utcSaturday",
      "utcSaturdays",
      "utcSecond",
      "utcSeconds",
      "utcSunday",
      "utcSundays",
      "utcThursday",
      "utcThursdays",
      "utcTuesday",
      "utcTuesdays",
      "utcWednesday",
      "utcWednesdays",
      "utcWeek",
      "utcWeeks",
      "utcYear",
      "utcYears"
    ]
  },
  {
    "name": "kronos-service",
    "result": "Imports CJS (fast-safe-stringify)",
    "keys": null
  },
  {
    "name": "esri-leaflet",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "specificity",
    "result": "ok",
    "keys": [
      "calculate",
      "compare"
    ]
  },
  {
    "name": "get-form-data",
    "result": "ok",
    "keys": [
      "default",
      "getFieldData"
    ]
  },
  {
    "name": "postmortem",
    "result": "Imports CJS (source-map-support)",
    "keys": null
  },
  {
    "name": "d3-dispatch",
    "result": "ok",
    "keys": [
      "dispatch"
    ]
  },
  {
    "name": "path-parser",
    "result": "Imports CJS (search-params)",
    "keys": null
  },
  {
    "name": "simple-dom",
    "result": "Invalid ESM",
    "keys": null
  },
  {
    "name": "scope-reporter",
    "result": "ok",
    "keys": [
      "createConsoleAdapter",
      "createLoggingAdapter",
      "createReporter",
      "createScopeDefinition",
      "createScopeDefinitions",
      "nullAdapter"
    ]
  },
  {
    "name": "primitive",
    "result": "Imports CJS (ow)",
    "keys": null
  },
  {
    "name": "perfect-scrollbar",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "textures",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "kronos-interceptor",
    "result": "ok",
    "keys": [
      "ConnectorMixin",
      "Interceptor",
      "LimitingInterceptor",
      "StatsCollectorInterceptor",
      "TimeoutInterceptor",
      "registerWithManager",
      "rejectingReceiver"
    ]
  },
  {
    "name": "riot-route",
    "result": "Imports CJS (riot-observable)",
    "keys": null
  },
  {
    "name": "riot-tmpl",
    "result": "ok",
    "keys": [
      "brackets",
      "tmpl"
    ]
  },
  {
    "name": "d3-interpolate",
    "result": "ok",
    "keys": [
      "interpolate",
      "interpolateArray",
      "interpolateBasis",
      "interpolateBasisClosed",
      "interpolateCubehelix",
      "interpolateCubehelixLong",
      "interpolateDate",
      "interpolateDiscrete",
      "interpolateHcl",
      "interpolateHclLong",
      "interpolateHsl",
      "interpolateHslLong",
      "interpolateHue",
      "interpolateLab",
      "interpolateNumber",
      "interpolateObject",
      "interpolateRgb",
      "interpolateRgbBasis",
      "interpolateRgbBasisClosed",
      "interpolateRound",
      "interpolateString",
      "interpolateTransformCss",
      "interpolateTransformSvg",
      "interpolateZoom",
      "piecewise",
      "quantize"
    ]
  },
  {
    "name": "popmotion",
    "result": "ok",
    "keys": [
      "Action",
      "ValueReaction",
      "action",
      "calc",
      "chain",
      "composite",
      "crossfade",
      "css",
      "decay",
      "delay",
      "easing",
      "everyFrame",
      "keyframes",
      "listen",
      "merge",
      "mouse",
      "multicast",
      "multitouch",
      "parallel",
      "physics",
      "pointer",
      "schedule",
      "spring",
      "stagger",
      "styler",
      "svg",
      "timeline",
      "transform",
      "tween",
      "value",
      "valueTypes"
    ]
  },
  {
    "name": "preact",
    "result": "ok",
    "keys": [
      "Component",
      "cloneElement",
      "createElement",
      "createRef",
      "default",
      "h",
      "options",
      "render",
      "rerender"
    ]
  },
  {
    "name": "fecha",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "estree-walker",
    "result": "ok",
    "keys": [
      "childKeys",
      "walk"
    ]
  },
  {
    "name": "snabbdom",
    "result": "ok",
    "keys": [
      "h",
      "init",
      "thunk"
    ]
  },
  {
    "name": "signal-js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "elenpi",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "inferno",
    "result": "ok",
    "keys": [
      "Component",
      "EMPTY_OBJ",
      "Fragment",
      "_CI",
      "_HI",
      "_M",
      "_MCCC",
      "_ME",
      "_MFCC",
      "_MP",
      "_MR",
      "_MT",
      "__render",
      "createComponentVNode",
      "createFragment",
      "createPortal",
      "createRef",
      "createRenderer",
      "createTextVNode",
      "createVNode",
      "directClone",
      "findDOMfromVNode",
      "forwardRef",
      "getFlagsForElementVnode",
      "linkEvent",
      "normalizeProps",
      "options",
      "render",
      "rerender",
      "version"
    ]
  },
  {
    "name": "aurelia-dependency-injection",
    "result": "Imports CJS (aurelia-metadata)",
    "keys": null
  },
  {
    "name": "reselect",
    "result": "ok",
    "keys": [
      "createSelector",
      "createSelectorCreator",
      "createStructuredSelector",
      "defaultMemoize"
    ]
  },
  {
    "name": "normalizr",
    "result": "ok",
    "keys": [
      "denormalize",
      "normalize",
      "schema"
    ]
  },
  {
    "name": "sandwich-stream",
    "result": "ok",
    "keys": [
      "SandwichStream",
      "default"
    ]
  },
  {
    "name": "autobind-decorator",
    "result": "ok",
    "keys": [
      "boundClass",
      "boundMethod",
      "default"
    ]
  },
  {
    "name": "xpath-lexer",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "aurelia-binding",
    "result": "Imports CJS (aurelia-logging)",
    "keys": null
  },
  {
    "name": "symbol-observable",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "indexeddbshim",
    "result": "Imports CJS (typeson-registry)",
    "keys": null
  },
  {
    "name": "@cycle/dom",
    "result": "Imports CJS (snabdom/h)",
    "keys": null
  },
  {
    "name": "rc-align",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "min-dom",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "d3-array",
    "result": "ok",
    "keys": [
      "ascending",
      "bisect",
      "bisectLeft",
      "bisectRight",
      "bisector",
      "cross",
      "descending",
      "deviation",
      "extent",
      "group",
      "histogram",
      "max",
      "mean",
      "median",
      "merge",
      "min",
      "pairs",
      "permute",
      "quantile",
      "quickselect",
      "range",
      "rollup",
      "scan",
      "shuffle",
      "sum",
      "thresholdFreedmanDiaconis",
      "thresholdScott",
      "thresholdSturges",
      "tickIncrement",
      "tickStep",
      "ticks",
      "transpose",
      "variance",
      "zip"
    ]
  },
  {
    "name": "aurelia-templating",
    "result": "Imports CJS (aurelia-logging)",
    "keys": null
  },
  {
    "name": "object-properties",
    "result": "ok",
    "keys": [
      "defineConstant",
      "defineConstants",
      "defineGetter",
      "defineLazyConstant",
      "defineLazyProperty",
      "defineProperties",
      "defineProperty",
      "definePrototypeConstant",
      "definePrototypeGetter",
      "definePrototypeLazyConstant",
      "definePrototypeLazyProperty",
      "definePrototypeProperty",
      "definePrototypeSetter",
      "defineSetter"
    ]
  },
  {
    "name": "swiper",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "fody",
    "result": "Imports CJS (react-helmet)",
    "keys": null
  },
  {
    "name": "json-schema-faker",
    "result": "Imports CJS (randexp)",
    "keys": null
  },
  {
    "name": "kronos-koa",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "sleep-promise",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "superagent-mock",
    "result": "Imports CJS (superagent-mock)",
    "keys": null
  },
  {
    "name": "d3-format",
    "result": "ok",
    "keys": [
      "format",
      "formatDefaultLocale",
      "formatLocale",
      "formatPrefix",
      "formatSpecifier",
      "precisionFixed",
      "precisionPrefix",
      "precisionRound"
    ]
  },
  {
    "name": "line-intersect",
    "result": "ok",
    "keys": [
      "checkIntersection",
      "colinearPointWithinSegment"
    ]
  },
  {
    "name": "cropperjs",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "alp-limosa",
    "result": "Imports CJS (limosa)",
    "keys": null
  },
  {
    "name": "stackblur-canvas",
    "result": "ok",
    "keys": [
      "BlurStack",
      "canvasRGB",
      "canvasRGBA",
      "image",
      "imageDataRGB",
      "imageDataRGBA"
    ]
  },
  {
    "name": "cf-util-http",
    "result": "Imports CJS (isomorphic-fetch)",
    "keys": null
  },
  {
    "name": "upyun",
    "result": "Imports CJS (axios)",
    "keys": null
  },
  {
    "name": "d3-timer",
    "result": "ok",
    "keys": [
      "interval",
      "now",
      "timeout",
      "timer",
      "timerFlush"
    ]
  },
  {
    "name": "optimal",
    "result": "ok",
    "keys": [
      "Builder",
      "CollectionBuilder",
      "InstanceBuilder",
      "NumberBuilder",
      "ShapeBuilder",
      "StringBuilder",
      "UnionBuilder",
      "array",
      "bool",
      "custom",
      "date",
      "default",
      "func",
      "instance",
      "number",
      "object",
      "regex",
      "shape",
      "string",
      "union"
    ]
  },
  {
    "name": "kronos-endpoint",
    "result": "ok",
    "keys": [
      "Endpoint",
      "InterceptedEndpoint",
      "ReceiveEndpoint",
      "ReceiveEndpointDefault",
      "SendEndpoint",
      "SendEndpointDefault"
    ]
  },
  {
    "name": "transliteration",
    "result": "ok",
    "keys": [
      "slugify",
      "transl"
    ]
  },
  {
    "name": "dom-align",
    "result": "ok",
    "keys": [
      "alignElement",
      "alignPoint",
      "default"
    ]
  },
  {
    "name": "rc-tooltip",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "d3-tip",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "iobuffer",
    "result": "Imports CJS (utf8)",
    "keys": null
  },
  {
    "name": "xpath-analyzer",
    "result": "ok",
    "keys": [
      "ABSOLUTE_LOCATION_PATH",
      "ADDITIVE",
      "ANCESTOR",
      "ANCESTOR_OR_SELF",
      "AND",
      "ATTRIBUTE",
      "AXES",
      "CHILD",
      "COMMENT",
      "DESCENDANT",
      "DESCENDANT_OR_SELF",
      "DIVISIONAL",
      "EQUALITY",
      "FILTER",
      "FOLLOWING",
      "FOLLOWING_SIBLING",
      "FUNCTION_CALL",
      "GREATER_THAN",
      "GREATER_THAN_OR_EQUAL",
      "INEQUALITY",
      "LESS_THAN",
      "LESS_THAN_OR_EQUAL",
      "LITERAL",
      "MODULUS",
      "MULTIPLICATIVE",
      "NAMESPACE",
      "NEGATION",
      "NODE",
      "NODE_TYPES",
      "NUMBER",
      "OR",
      "PARENT",
      "PATH",
      "PRECEDING",
      "PRECEDING_SIBLING",
      "PROCESSING_INSTRUCTION",
      "RELATIVE_LOCATION_PATH",
      "SELF",
      "SUBTRACTIVE",
      "TEXT",
      "UNION",
      "default"
    ]
  },
  {
    "name": "throttle-debounce",
    "result": "ok",
    "keys": [
      "debounce",
      "throttle"
    ]
  },
  {
    "name": "emerge",
    "result": "ok",
    "keys": [
      "equal",
      "equalBy",
      "get",
      "getIn",
      "insertAtIndex",
      "is",
      "merge",
      "patch",
      "put",
      "putBy",
      "putIn",
      "putInBy",
      "removeAtIndex",
      "scan"
    ]
  },
  {
    "name": "postcss-custom-properties",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "recompose",
    "result": "Imports CJS (hoist-non-react-statics)",
    "keys": null
  },
  {
    "name": "d3-path",
    "result": "ok",
    "keys": [
      "path"
    ]
  },
  {
    "name": "contentful",
    "result": "Imports CJS (qs)",
    "keys": null
  },
  {
    "name": "react-portal",
    "result": "Imports CJS (react-dom)",
    "keys": null
  },
  {
    "name": "postcss-custom-media",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "rc-checkbox",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "term-ng",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "recon-js",
    "result": "Imports CJS (tslib)",
    "keys": null
  },
  {
    "name": "parse-function",
    "result": "Imports CJS (babylon)",
    "keys": null
  },
  {
    "name": "route-node",
    "result": "Imports CJS (search-params)",
    "keys": null
  },
  {
    "name": "rcu-builders",
    "result": "Imports CJS (tosource)",
    "keys": null
  },
  {
    "name": "domtastic",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "svg-pathdata",
    "result": "ok",
    "keys": [
      "COMMAND_ARG_COUNTS",
      "SVGPathData",
      "SVGPathDataParser",
      "SVGPathDataTransformer",
      "encodeSVGPath"
    ]
  },
  {
    "name": "cf-util-logger",
    "result": "Imports CJS (debug)",
    "keys": null
  },
  {
    "name": "ebml",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "pouchdb-collections",
    "result": "ok",
    "keys": [
      "Map",
      "Set"
    ]
  },
  {
    "name": "react-modal",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "react-textarea-autosize",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "redolent",
    "result": "Imports CJS (native-or-another)",
    "keys": null
  },
  {
    "name": "async-validator",
    "result": "Imports CJS (babel-runtime/helpers/typeof)",
    "keys": null
  },
  {
    "name": "upcast",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "executive",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "console",
    "result": "ok",
    "keys": [
      "Console",
      "assert",
      "clear",
      "context",
      "count",
      "countReset",
      "debug",
      "default",
      "dir",
      "dirxml",
      "error",
      "group",
      "groupCollapsed",
      "groupEnd",
      "info",
      "log",
      "profile",
      "profileEnd",
      "table",
      "time",
      "timeEnd",
      "timeLog",
      "timeStamp",
      "trace",
      "warn"
    ]
  },
  {
    "name": "d3-ease",
    "result": "ok",
    "keys": [
      "easeBack",
      "easeBackIn",
      "easeBackInOut",
      "easeBackOut",
      "easeBounce",
      "easeBounceIn",
      "easeBounceInOut",
      "easeBounceOut",
      "easeCircle",
      "easeCircleIn",
      "easeCircleInOut",
      "easeCircleOut",
      "easeCubic",
      "easeCubicIn",
      "easeCubicInOut",
      "easeCubicOut",
      "easeElastic",
      "easeElasticIn",
      "easeElasticInOut",
      "easeElasticOut",
      "easeExp",
      "easeExpIn",
      "easeExpInOut",
      "easeExpOut",
      "easeLinear",
      "easePoly",
      "easePolyIn",
      "easePolyInOut",
      "easePolyOut",
      "easeQuad",
      "easeQuadIn",
      "easeQuadInOut",
      "easeQuadOut",
      "easeSin",
      "easeSinIn",
      "easeSinInOut",
      "easeSinOut"
    ]
  },
  {
    "name": "bellajs",
    "result": "ok",
    "keys": [
      "clone",
      "compose",
      "copies",
      "createAlias",
      "createId",
      "curry",
      "decode",
      "encode",
      "equals",
      "escapeHTML",
      "format",
      "hasProperty",
      "isArray",
      "isBoolean",
      "isDate",
      "isElement",
      "isEmail",
      "isEmpty",
      "isFunction",
      "isInteger",
      "isLetter",
      "isNull",
      "isNumber",
      "isObject",
      "isString",
      "isUndefined",
      "leftPad",
      "local",
      "md5",
      "now",
      "pipe",
      "random",
      "relativize",
      "repeat",
      "replaceAll",
      "rightPad",
      "stripAccent",
      "stripTags",
      "template",
      "time",
      "trim",
      "truncate",
      "ucfirst",
      "ucwords",
      "unescapeHTML",
      "unique",
      "utc"
    ]
  },
  {
    "name": "vega",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "contentful-resolve-response",
    "result": "Imports CJS (lodash/cloneDeep)",
    "keys": null
  },
  {
    "name": "vue-resource",
    "result": "ok",
    "keys": [
      "Http",
      "Resource",
      "Url",
      "default"
    ]
  },
  {
    "name": "indexed-filter",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "array-duplicated",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "knot.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "react-icon-base",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-dropzone",
    "result": "Imports CJS (attr-accept)",
    "keys": null
  },
  {
    "name": "react-blessed",
    "result": "Imports CJS (react-reconciler)",
    "keys": null
  },
  {
    "name": "d3plus-color",
    "result": "ok",
    "keys": [
      "colorAdd",
      "colorAssign",
      "colorContrast",
      "colorDefaults",
      "colorLegible",
      "colorLighter",
      "colorSubtract"
    ]
  },
  {
    "name": "d3-time-format",
    "result": "ok",
    "keys": [
      "isoFormat",
      "isoParse",
      "timeFormat",
      "timeFormatDefaultLocale",
      "timeFormatLocale",
      "timeParse",
      "utcFormat",
      "utcParse"
    ]
  },
  {
    "name": "virgil-crypto",
    "result": "Imports add-on",
    "keys": null
  },
  {
    "name": "d3-collection",
    "result": "ok",
    "keys": [
      "entries",
      "keys",
      "map",
      "nest",
      "set",
      "values"
    ]
  },
  {
    "name": "indian-ocean",
    "result": "Imports CJS (underscore)",
    "keys": null
  },
  {
    "name": "floating-scroll",
    "result": "Imports CJS (jquery)",
    "keys": null
  },
  {
    "name": "antd",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "virtual-audio-graph",
    "result": "ok",
    "keys": [
      "analyser",
      "biquadFilter",
      "bufferSource",
      "channelMerger",
      "channelSplitter",
      "convolver",
      "createNode",
      "createWorkletNode",
      "default",
      "delay",
      "dynamicsCompressor",
      "gain",
      "mediaElementSource",
      "mediaStreamDestination",
      "mediaStreamSource",
      "oscillator",
      "panner",
      "stereoPanner",
      "waveShaper"
    ]
  },
  {
    "name": "router5",
    "result": "Imports CJS (search-params)",
    "keys": null
  },
  {
    "name": "dush",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "eventbrite",
    "result": "Imports CJS (isomorphic-fetch)",
    "keys": null
  },
  {
    "name": "exifreader",
    "result": "ok",
    "keys": [
      "default",
      "load",
      "loadView"
    ]
  },
  {
    "name": "flagger",
    "result": "Imports CJS (ajv)",
    "keys": null
  },
  {
    "name": "vast-client",
    "result": "ok",
    "keys": [
      "VASTClient",
      "VASTParser",
      "VASTTracker"
    ]
  },
  {
    "name": "lemonade",
    "result": "Imports CJS (data)",
    "keys": null
  },
  {
    "name": "illuminate-js",
    "result": "ok",
    "keys": [
      "addLanguage",
      "addPlugin",
      "getLanguage",
      "highlight",
      "resetPlugins",
      "tokenize"
    ]
  },
  {
    "name": "little-emitter",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "parameter",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "list",
    "result": "ok",
    "keys": [
      "List",
      "Node",
      "adjust",
      "all",
      "any",
      "ap",
      "append",
      "chain",
      "concat",
      "contains",
      "drop",
      "dropLast",
      "dropRepeats",
      "dropRepeatsWith",
      "dropWhile",
      "empty",
      "equals",
      "equalsWith",
      "every",
      "filter",
      "find",
      "findIndex",
      "findLast",
      "first",
      "flatMap",
      "flatten",
      "foldl",
      "foldr",
      "forEach",
      "from",
      "group",
      "groupWith",
      "includes",
      "indexOf",
      "init",
      "insert",
      "insertAll",
      "intersperse",
      "isEmpty",
      "isList",
      "join",
      "last",
      "lastIndexOf",
      "length",
      "list",
      "map",
      "none",
      "nth",
      "of",
      "pair",
      "partition",
      "pluck",
      "pop",
      "prepend",
      "range",
      "reduce",
      "reduceRight",
      "reject",
      "remove",
      "repeat",
      "reverse",
      "scan",
      "sequence",
      "slice",
      "some",
      "sort",
      "sortBy",
      "sortWith",
      "splitAt",
      "splitEvery",
      "splitWhen",
      "tail",
      "take",
      "takeLast",
      "takeLastWhile",
      "takeWhile",
      "times",
      "toArray",
      "traverse",
      "update",
      "zip",
      "zipWith"
    ]
  },
  {
    "name": "synchsafe",
    "result": "ok",
    "keys": [
      "decode",
      "encode"
    ]
  },
  {
    "name": "mvcobject",
    "result": "ok",
    "keys": [
      "MVCObject",
      "default"
    ]
  },
  {
    "name": "preact-render-to-string",
    "result": "ok",
    "keys": [
      "default",
      "render",
      "renderToString",
      "shallowRender"
    ]
  },
  {
    "name": "tinyqueue",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "react-leaflet",
    "result": "Imports CJS (hoist-non-react-statics)",
    "keys": null
  },
  {
    "name": "react-resize-detector",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "videojs-contrib-ads",
    "result": "Imports CJS (videojs-vtt)",
    "keys": null
  },
  {
    "name": "leaflet-virtual-grid",
    "result": "Imports CJS (leaflet)",
    "keys": null
  },
  {
    "name": "tiny-binary-search",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "react-datepicker",
    "result": "Imports CJS (warning)",
    "keys": null
  },
  {
    "name": "geojson-vt",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "xpath-evaluator",
    "result": "ok",
    "keys": [
      "XPathResult",
      "default"
    ]
  },
  {
    "name": "postcss-custom-selectors",
    "result": "Imports CJS (postcss-selector-parser)",
    "keys": null
  },
  {
    "name": "material-colors",
    "result": "ok",
    "keys": [
      "amber",
      "black",
      "blue",
      "blueGrey",
      "brown",
      "cyan",
      "darkIcons",
      "darkText",
      "deepOrange",
      "deepPurple",
      "default",
      "green",
      "grey",
      "indigo",
      "lightBlue",
      "lightGreen",
      "lightIcons",
      "lightText",
      "lime",
      "orange",
      "pink",
      "purple",
      "red",
      "teal",
      "white",
      "yellow"
    ]
  },
  {
    "name": "rc-menu",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "vdt",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "react-google-maps-loader",
    "result": "Imports CJS (little-loader)",
    "keys": null
  },
  {
    "name": "broken",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "cf-util-route-handler",
    "result": "ok",
    "keys": [
      "__resetRouteHandler",
      "handleRoutes",
      "routeTo"
    ]
  },
  {
    "name": "didi",
    "result": "ok",
    "keys": [
      "Injector",
      "Module",
      "annotate"
    ]
  },
  {
    "name": "kronos-service-koa",
    "result": "Imports CJS (fast-safe-stringify)",
    "keys": null
  },
  {
    "name": "rc-select",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "tiny-cookie",
    "result": "ok",
    "keys": [
      "get",
      "getAll",
      "getAllCookies",
      "getCookie",
      "getRaw",
      "getRawCookie",
      "isCookieEnabled",
      "isEnabled",
      "remove",
      "removeCookie",
      "set",
      "setCookie",
      "setRaw",
      "setRawCookie"
    ]
  },
  {
    "name": "pouchdb-find",
    "result": "Imports CJS (inherits)",
    "keys": null
  },
  {
    "name": "d3plus-text",
    "result": "ok",
    "keys": [
      "TextBox",
      "fontExists",
      "rtl",
      "stringify",
      "strip",
      "textSplit",
      "textWidth",
      "textWrap",
      "titleCase",
      "trim",
      "trimLeft",
      "trimRight"
    ]
  },
  {
    "name": "cf-component-link",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "precss",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "jsonpath-plus",
    "result": "ok",
    "keys": [
      "JSONPath"
    ]
  },
  {
    "name": "minim-api-description",
    "result": "Imports CJS (minim-api-description)",
    "keys": null
  },
  {
    "name": "changelog-filename-regex",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "lodash-es",
    "result": "ok",
    "keys": [
      "add",
      "after",
      "ary",
      "assign",
      "assignIn",
      "assignInWith",
      "assignWith",
      "at",
      "attempt",
      "before",
      "bind",
      "bindAll",
      "bindKey",
      "camelCase",
      "capitalize",
      "castArray",
      "ceil",
      "chain",
      "chunk",
      "clamp",
      "clone",
      "cloneDeep",
      "cloneDeepWith",
      "cloneWith",
      "commit",
      "compact",
      "concat",
      "cond",
      "conforms",
      "conformsTo",
      "constant",
      "countBy",
      "create",
      "curry",
      "curryRight",
      "debounce",
      "deburr",
      "default",
      "defaultTo",
      "defaults",
      "defaultsDeep",
      "defer",
      "delay",
      "difference",
      "differenceBy",
      "differenceWith",
      "divide",
      "drop",
      "dropRight",
      "dropRightWhile",
      "dropWhile",
      "each",
      "eachRight",
      "endsWith",
      "entries",
      "entriesIn",
      "eq",
      "escape",
      "escapeRegExp",
      "every",
      "extend",
      "extendWith",
      "fill",
      "filter",
      "find",
      "findIndex",
      "findKey",
      "findLast",
      "findLastIndex",
      "findLastKey",
      "first",
      "flatMap",
      "flatMapDeep",
      "flatMapDepth",
      "flatten",
      "flattenDeep",
      "flattenDepth",
      "flip",
      "floor",
      "flow",
      "flowRight",
      "forEach",
      "forEachRight",
      "forIn",
      "forInRight",
      "forOwn",
      "forOwnRight",
      "fromPairs",
      "functions",
      "functionsIn",
      "get",
      "groupBy",
      "gt",
      "gte",
      "has",
      "hasIn",
      "head",
      "identity",
      "inRange",
      "includes",
      "indexOf",
      "initial",
      "intersection",
      "intersectionBy",
      "intersectionWith",
      "invert",
      "invertBy",
      "invoke",
      "invokeMap",
      "isArguments",
      "isArray",
      "isArrayBuffer",
      "isArrayLike",
      "isArrayLikeObject",
      "isBoolean",
      "isBuffer",
      "isDate",
      "isElement",
      "isEmpty",
      "isEqual",
      "isEqualWith",
      "isError",
      "isFinite",
      "isFunction",
      "isInteger",
      "isLength",
      "isMap",
      "isMatch",
      "isMatchWith",
      "isNaN",
      "isNative",
      "isNil",
      "isNull",
      "isNumber",
      "isObject",
      "isObjectLike",
      "isPlainObject",
      "isRegExp",
      "isSafeInteger",
      "isSet",
      "isString",
      "isSymbol",
      "isTypedArray",
      "isUndefined",
      "isWeakMap",
      "isWeakSet",
      "iteratee",
      "join",
      "kebabCase",
      "keyBy",
      "keys",
      "keysIn",
      "last",
      "lastIndexOf",
      "lodash",
      "lowerCase",
      "lowerFirst",
      "lt",
      "lte",
      "map",
      "mapKeys",
      "mapValues",
      "matches",
      "matchesProperty",
      "max",
      "maxBy",
      "mean",
      "meanBy",
      "memoize",
      "merge",
      "mergeWith",
      "method",
      "methodOf",
      "min",
      "minBy",
      "mixin",
      "multiply",
      "negate",
      "next",
      "noop",
      "now",
      "nth",
      "nthArg",
      "omit",
      "omitBy",
      "once",
      "orderBy",
      "over",
      "overArgs",
      "overEvery",
      "overSome",
      "pad",
      "padEnd",
      "padStart",
      "parseInt",
      "partial",
      "partialRight",
      "partition",
      "pick",
      "pickBy",
      "plant",
      "property",
      "propertyOf",
      "pull",
      "pullAll",
      "pullAllBy",
      "pullAllWith",
      "pullAt",
      "random",
      "range",
      "rangeRight",
      "rearg",
      "reduce",
      "reduceRight",
      "reject",
      "remove",
      "repeat",
      "replace",
      "rest",
      "result",
      "reverse",
      "round",
      "sample",
      "sampleSize",
      "set",
      "setWith",
      "shuffle",
      "size",
      "slice",
      "snakeCase",
      "some",
      "sortBy",
      "sortedIndex",
      "sortedIndexBy",
      "sortedIndexOf",
      "sortedLastIndex",
      "sortedLastIndexBy",
      "sortedLastIndexOf",
      "sortedUniq",
      "sortedUniqBy",
      "split",
      "spread",
      "startCase",
      "startsWith",
      "stubArray",
      "stubFalse",
      "stubObject",
      "stubString",
      "stubTrue",
      "subtract",
      "sum",
      "sumBy",
      "tail",
      "take",
      "takeRight",
      "takeRightWhile",
      "takeWhile",
      "tap",
      "template",
      "templateSettings",
      "throttle",
      "thru",
      "times",
      "toArray",
      "toFinite",
      "toInteger",
      "toIterator",
      "toJSON",
      "toLength",
      "toLower",
      "toNumber",
      "toPairs",
      "toPairsIn",
      "toPath",
      "toPlainObject",
      "toSafeInteger",
      "toString",
      "toUpper",
      "transform",
      "trim",
      "trimEnd",
      "trimStart",
      "truncate",
      "unary",
      "unescape",
      "union",
      "unionBy",
      "unionWith",
      "uniq",
      "uniqBy",
      "uniqWith",
      "uniqueId",
      "unset",
      "unzip",
      "unzipWith",
      "update",
      "updateWith",
      "upperCase",
      "upperFirst",
      "value",
      "valueOf",
      "values",
      "valuesIn",
      "without",
      "words",
      "wrap",
      "wrapperAt",
      "wrapperChain",
      "wrapperCommit",
      "wrapperLodash",
      "wrapperNext",
      "wrapperPlant",
      "wrapperReverse",
      "wrapperToIterator",
      "wrapperValue",
      "xor",
      "xorBy",
      "xorWith",
      "zip",
      "zipObject",
      "zipObjectDeep",
      "zipWith"
    ]
  },
  {
    "name": "vue-router",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "shortcake",
    "result": "Imports CJS (vigil)",
    "keys": null
  },
  {
    "name": "element-closest",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "component-registry",
    "result": "Uses CJS variables (require)",
    "keys": null
  },
  {
    "name": "ml-tree-similarity",
    "result": "Imports CJS (num-sort)",
    "keys": null
  },
  {
    "name": "react-input-number",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-hammerjs",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "postcss-color-hex-alpha",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "kronos-message",
    "result": "Uses CJS variables (require)",
    "keys": null
  },
  {
    "name": "contentful-management",
    "result": "Imports CJS (qs)",
    "keys": null
  },
  {
    "name": "get-scroll",
    "result": "ok",
    "keys": [
      "getScrollLeft",
      "getScrollTop"
    ]
  },
  {
    "name": "rc-dropdown",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rc-tree",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "d3-shape",
    "result": "ok",
    "keys": [
      "arc",
      "area",
      "areaRadial",
      "curveBasis",
      "curveBasisClosed",
      "curveBasisOpen",
      "curveBundle",
      "curveCardinal",
      "curveCardinalClosed",
      "curveCardinalOpen",
      "curveCatmullRom",
      "curveCatmullRomClosed",
      "curveCatmullRomOpen",
      "curveLinear",
      "curveLinearClosed",
      "curveMonotoneX",
      "curveMonotoneY",
      "curveNatural",
      "curveStep",
      "curveStepAfter",
      "curveStepBefore",
      "line",
      "lineRadial",
      "linkHorizontal",
      "linkRadial",
      "linkVertical",
      "pie",
      "pointRadial",
      "radialArea",
      "radialLine",
      "stack",
      "stackOffsetDiverging",
      "stackOffsetExpand",
      "stackOffsetNone",
      "stackOffsetSilhouette",
      "stackOffsetWiggle",
      "stackOrderAscending",
      "stackOrderDescending",
      "stackOrderInsideOut",
      "stackOrderNone",
      "stackOrderReverse",
      "symbol",
      "symbolCircle",
      "symbolCross",
      "symbolDiamond",
      "symbolSquare",
      "symbolStar",
      "symbolTriangle",
      "symbolWye",
      "symbols"
    ]
  },
  {
    "name": "relative-luminance",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "searchjs",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "canvas-utils",
    "result": "Imports CJS (jvent)",
    "keys": null
  },
  {
    "name": "react-router-relay",
    "result": "Imports CJS (react-router)",
    "keys": null
  },
  {
    "name": "dompurify",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "rc-notification",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rc-progress",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "foundation-sites",
    "result": "Imports CJS (jquery)",
    "keys": null
  },
  {
    "name": "get-installed-path",
    "result": "Imports CJS (global-modules)",
    "keys": null
  },
  {
    "name": "qrcode-reader",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "d3-transform",
    "result": "ok",
    "keys": [
      "transform"
    ]
  },
  {
    "name": "dag-map",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "minim-parse-result",
    "result": "Imports CJS (minim-parse-result)",
    "keys": null
  },
  {
    "name": "postcss-color-gray",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "postcss-pseudo-class-any-link",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "standardized-audio-context",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "smooth-scrollbar",
    "result": "Imports CJS (core-js)",
    "keys": null
  },
  {
    "name": "behaviortree",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "sourcegraph",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "@most/hold",
    "result": "ok",
    "keys": [
      "hold"
    ]
  },
  {
    "name": "most-subject",
    "result": "ok",
    "keys": [
      "attach",
      "create",
      "end",
      "error",
      "event"
    ]
  },
  {
    "name": "switch-path",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "d3-svg-legend",
    "result": "ok",
    "keys": [
      "default",
      "legendColor",
      "legendHelpers",
      "legendSize",
      "legendSymbol"
    ]
  },
  {
    "name": "derivable",
    "result": "ok",
    "keys": [
      "__Reactor",
      "__captureDereferences",
      "atom",
      "atomic",
      "atomically",
      "derive",
      "isAtom",
      "isDerivable",
      "isDerivation",
      "isLens",
      "lens",
      "setDebugMode",
      "struct",
      "ticker",
      "transact",
      "transaction",
      "unpack"
    ]
  },
  {
    "name": "fischer-color",
    "result": "ok",
    "keys": [
      "interpolate"
    ]
  },
  {
    "name": "newsletter",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "grommet",
    "result": "Imports CJS (mobile-detect)",
    "keys": null
  },
  {
    "name": "trackjs",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "iso-639-1",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "satellite.js",
    "result": "ok",
    "keys": [
      "constants",
      "degreesLat",
      "degreesLong",
      "degreesToRadians",
      "dopplerFactor",
      "ecfToEci",
      "ecfToLookAngles",
      "eciToEcf",
      "eciToGeodetic",
      "geodeticToEcf",
      "gstime",
      "invjday",
      "jday",
      "propagate",
      "radiansLat",
      "radiansLong",
      "radiansToDegrees",
      "sgp4",
      "twoline2satrec"
    ]
  },
  {
    "name": "knayi-myscript",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "wanakana",
    "result": "ok",
    "keys": [
      "ROMANIZATIONS",
      "TO_KANA_METHODS",
      "VERSION",
      "bind",
      "isHiragana",
      "isJapanese",
      "isKana",
      "isKanji",
      "isKatakana",
      "isMixed",
      "isRomaji",
      "stripOkurigana",
      "toHiragana",
      "toKana",
      "toKatakana",
      "toRomaji",
      "tokenize",
      "unbind"
    ]
  },
  {
    "name": "ng-table",
    "result": "Imports html",
    "keys": null
  },
  {
    "name": "optimizely-oui",
    "result": "Imports CJS (react-oui-icons)",
    "keys": null
  },
  {
    "name": "points",
    "result": "ok",
    "keys": [
      "add",
      "boundingBox",
      "cubify",
      "length",
      "moveIndex",
      "offset",
      "position",
      "remove",
      "reverse",
      "rotate",
      "scale"
    ]
  },
  {
    "name": "postprocessing",
    "result": "ok",
    "keys": [
      "AdaptiveLuminanceMaterial",
      "BlendFunction",
      "BlendMode",
      "BloomEffect",
      "BlurPass",
      "BokehEffect",
      "BrightnessContrastEffect",
      "ChromaticAberrationEffect",
      "ClearMaskPass",
      "ClearPass",
      "ColorAverageEffect",
      "ColorEdgesMaterial",
      "ConvolutionMaterial",
      "CopyMaterial",
      "DepthComparisonMaterial",
      "DepthEffect",
      "DepthPass",
      "Disposable",
      "DotScreenEffect",
      "Effect",
      "EffectAttribute",
      "EffectComposer",
      "EffectMaterial",
      "EffectPass",
      "GammaCorrectionEffect",
      "GlitchEffect",
      "GlitchMode",
      "GodRaysEffect",
      "GodRaysMaterial",
      "GridEffect",
      "HueSaturationEffect",
      "Initializable",
      "KernelSize",
      "LuminanceMaterial",
      "MaskPass",
      "NoiseEffect",
      "NormalPass",
      "OutlineEdgesMaterial",
      "OutlineEffect",
      "Pass",
      "PixelationEffect",
      "RawImageData",
      "RealisticBokehEffect",
      "RenderPass",
      "Resizable",
      "SMAAAreaImageData",
      "SMAAEffect",
      "SMAASearchImageData",
      "SMAAWeightsMaterial",
      "SSAOEffect",
      "SavePass",
      "ScanlineEffect",
      "SepiaEffect",
      "ShaderPass",
      "ShockWaveEffect",
      "TextureEffect",
      "ToneMappingEffect",
      "VignetteEffect"
    ]
  },
  {
    "name": "subscribe-ui-event",
    "result": "Imports CJS (eventemitter3)",
    "keys": null
  },
  {
    "name": "redux-decorated",
    "result": "ok",
    "keys": [
      "action",
      "clone",
      "createActions",
      "createReducer",
      "removeIn",
      "removeInAny",
      "updateIn",
      "updateInAny"
    ]
  },
  {
    "name": "rmc-picker",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "postcss-advanced-variables",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "rc-dialog",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "sourcemap-codec",
    "result": "ok",
    "keys": [
      "decode",
      "encode"
    ]
  },
  {
    "name": "rc-tabs",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "webrtc-adapter",
    "result": "Imports CJS (rtcpeerconnection-shim)",
    "keys": null
  },
  {
    "name": "pope",
    "result": "ok",
    "keys": [
      "pope",
      "prop"
    ]
  },
  {
    "name": "ionicons",
    "result": "ok",
    "keys": [
      "addIcons"
    ]
  },
  {
    "name": "pouchdb-authentication",
    "result": "Imports CJS (url-join)",
    "keys": null
  },
  {
    "name": "rc-pagination",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "argue-cli",
    "result": "ok",
    "keys": [
      "argv",
      "end",
      "expect",
      "options",
      "optionsEqual",
      "read",
      "setArguments",
      "strictOptions",
      "strictOptionsEqual"
    ]
  },
  {
    "name": "pkcs7",
    "result": "ok",
    "keys": [
      "VERSION",
      "pad",
      "unpad"
    ]
  },
  {
    "name": "is-var-name",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "style-inject",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "harvest",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "redux-persist",
    "result": "ok",
    "keys": [
      "DEFAULT_VERSION",
      "FLUSH",
      "KEY_PREFIX",
      "PAUSE",
      "PERSIST",
      "PURGE",
      "REGISTER",
      "REHYDRATE",
      "createMigrate",
      "createPersistoid",
      "createTransform",
      "getStoredState",
      "persistCombineReducers",
      "persistReducer",
      "persistStore",
      "purgeStoredState"
    ]
  },
  {
    "name": "skatejs",
    "result": "ok",
    "keys": [
      "define",
      "emit",
      "link",
      "name",
      "normalizeAttributeDefinition",
      "normalizePropertyDefinition",
      "prop",
      "props",
      "shadow",
      "withChildren",
      "withComponent",
      "withContext",
      "withLifecycle",
      "withRenderer",
      "withUpdate"
    ]
  },
  {
    "name": "rc-upload",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-form",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "rc-slider",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "cake-mocha",
    "result": "Imports CJS (connect)",
    "keys": null
  },
  {
    "name": "react-maskedinput",
    "result": "Imports CJS (inputmask-core)",
    "keys": null
  },
  {
    "name": "react-tabs",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "xhttp",
    "result": "ok",
    "keys": [
      "Xhttp",
      "abort",
      "abortSilently",
      "eventToResponse",
      "formdataEncode",
      "getResponseBody",
      "headerLinesToDict",
      "isJSONEncodable",
      "isStatusOk",
      "open",
      "sendBody",
      "sendHeaders",
      "setCallback",
      "start",
      "transformParams"
    ]
  },
  {
    "name": "rc-calendar",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-hotkeys",
    "result": "Wrong ESM entry point",
    "keys": null
  },
  {
    "name": "ng2-bootstrap",
    "result": "Imports CJS (rxjs)",
    "keys": null
  },
  {
    "name": "viz.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "verbosity",
    "result": "Imports CJS (dateformat)",
    "keys": null
  },
  {
    "name": "dexie",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "viewport-mercator-project",
    "result": "ok",
    "keys": [
      "PerspectiveMercatorViewport",
      "WebMercatorViewport",
      "addMetersToLngLat",
      "default",
      "fitBounds",
      "flyToViewport",
      "getDistanceScales",
      "getMeterZoom",
      "getProjectionMatrix",
      "getProjectionParameters",
      "getUncenteredViewMatrix",
      "getViewMatrix",
      "lngLatToWorld",
      "normalizeViewportProps",
      "pixelsToWorld",
      "projectFlat",
      "unprojectFlat",
      "worldToLngLat",
      "worldToPixels"
    ]
  },
  {
    "name": "crowdcontrol",
    "result": "Imports CJS (riot-observable)",
    "keys": null
  },
  {
    "name": "skema",
    "result": "Not ESM (TypeScript)",
    "keys": null
  },
  {
    "name": "autonumeric",
    "result": "Invalid ESM",
    "keys": null
  },
  {
    "name": "antwar-rss-plugin",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "bebop",
    "result": "Imports CJS (vigil)",
    "keys": null
  },
  {
    "name": "buscacursos-uc",
    "result": "Imports CJS (qs)",
    "keys": null
  },
  {
    "name": "cf-component-select",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "cf-component-viewport",
    "result": "Imports CJS (react-responsive)",
    "keys": null
  },
  {
    "name": "d3plus-shape",
    "result": "ok",
    "keys": [
      "Area",
      "Bar",
      "Box",
      "Circle",
      "Image",
      "Line",
      "Path",
      "Rect",
      "Shape",
      "Whisker",
      "largestRect",
      "lineIntersection",
      "path2polygon",
      "pointDistance",
      "pointDistanceSquared",
      "pointRotate",
      "polygonInside",
      "polygonRayCast",
      "polygonRotate",
      "segmentBoxContains",
      "segmentsIntersect",
      "shapeEdgePoint",
      "simplify"
    ]
  },
  {
    "name": "qtek",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "leaflet-shape-markers",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "markdown-spellcheck",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "identifi-lib",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "is-array-buffer",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "kronos-service-health-check",
    "result": "Imports CJS (fast-safe-stringify)",
    "keys": null
  },
  {
    "name": "midi-file-slicer",
    "result": "ok",
    "keys": [
      "MidiFileSlicer"
    ]
  },
  {
    "name": "worker-timers",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "xy-parser",
    "result": "Imports CJS (ml-arrayxy-uniquex)",
    "keys": null
  },
  {
    "name": "scouter",
    "result": "Imports CJS (nanoassert)",
    "keys": null
  },
  {
    "name": "prax",
    "result": "ok",
    "keys": [
      "RenderQue",
      "byPath",
      "byQuery",
      "computation",
      "isComponent",
      "on",
      "praxComponentDidMount",
      "praxComponentDidUpdate",
      "praxComponentWillUnmount",
      "praxDeref",
      "praxRender",
      "validateInstance"
    ]
  },
  {
    "name": "videojs-contrib-dash",
    "result": "Imports CJS (codem-isoboxer)",
    "keys": null
  },
  {
    "name": "asmcrypto.js",
    "result": "ok",
    "keys": [
      "AES_CBC",
      "AES_CCM",
      "AES_CFB",
      "AES_CMAC",
      "AES_CTR",
      "AES_ECB",
      "AES_GCM",
      "AES_OFB",
      "BigNumber",
      "HmacSha1",
      "HmacSha256",
      "HmacSha512",
      "IllegalArgumentError",
      "IllegalStateError",
      "Modulus",
      "Pbkdf2HmacSha1",
      "Pbkdf2HmacSha256",
      "Pbkdf2HmacSha512",
      "RSA",
      "RSA_OAEP",
      "RSA_PKCS1_v1_5",
      "RSA_PSS",
      "SecurityError",
      "Sha1",
      "Sha256",
      "Sha512",
      "base64_to_bytes",
      "bytes_to_base64",
      "bytes_to_hex",
      "bytes_to_string",
      "hex_to_bytes",
      "string_to_bytes"
    ]
  },
  {
    "name": "vega-dataflow",
    "result": "ok",
    "keys": [
      "Dataflow",
      "EventStream",
      "MultiPulse",
      "Operator",
      "Parameters",
      "Pulse",
      "Transform",
      "UniqueList",
      "changeset",
      "definition",
      "derive",
      "ingest",
      "isChangeSet",
      "isTuple",
      "rederive",
      "replace",
      "transform",
      "transforms",
      "tupleid"
    ]
  },
  {
    "name": "vega-expression",
    "result": "ok",
    "keys": [
      "ASTNode",
      "codegen",
      "constants",
      "functions",
      "parse"
    ]
  },
  {
    "name": "vega-scenegraph",
    "result": "ok",
    "keys": [
      "Bounds",
      "CanvasHandler",
      "CanvasRenderer",
      "Gradient",
      "GroupItem",
      "Handler",
      "Item",
      "Marks",
      "RenderType",
      "Renderer",
      "ResourceLoader",
      "SVGHandler",
      "SVGRenderer",
      "SVGStringRenderer",
      "Scenegraph",
      "boundClip",
      "boundContext",
      "boundItem",
      "boundMark",
      "boundStroke",
      "closeTag",
      "domChild",
      "domClear",
      "domCreate",
      "domFind",
      "font",
      "fontFamily",
      "fontSize",
      "openTag",
      "pathCurves",
      "pathEqual",
      "pathParse",
      "pathRectangle",
      "pathRender",
      "pathSymbols",
      "pathTrail",
      "point",
      "renderModule",
      "resetSVGClipId",
      "sceneEqual",
      "sceneFromJSON",
      "scenePickVisit",
      "sceneToJSON",
      "sceneVisit",
      "sceneZOrder",
      "textMetrics"
    ]
  },
  {
    "name": "redux-form",
    "result": "Imports CJS (invariant)",
    "keys": null
  },
  {
    "name": "framework7",
    "result": "Imports CJS (path-to-regexp)",
    "keys": null
  },
  {
    "name": "@cycle/http",
    "result": "Imports CJS (superagent)",
    "keys": null
  },
  {
    "name": "victory-axis",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-line",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "referential",
    "result": "Imports CJS (riot-observable)",
    "keys": null
  },
  {
    "name": "odgn-bitfield",
    "result": "ok",
    "keys": [
      "BitField"
    ]
  },
  {
    "name": "react-auto-form",
    "result": "Imports CJS (get-form-data)",
    "keys": null
  },
  {
    "name": "kronos-flow",
    "result": "Imports CJS (fast-safe-stringify)",
    "keys": null
  },
  {
    "name": "auth0-js",
    "result": "ok",
    "keys": [
      "Authentication",
      "Management",
      "WebAuth",
      "default",
      "version"
    ]
  },
  {
    "name": "react-cookie",
    "result": "Imports CJS (cookie)",
    "keys": null
  },
  {
    "name": "color-functions",
    "result": "ok",
    "keys": [
      "cssColor",
      "hex2hsl",
      "hex2rgb",
      "hsl2hsv",
      "hsl2rgb",
      "hsv2hex",
      "hsv2hsl",
      "hsv2rgb",
      "rgb2hex",
      "rgb2hsv",
      "rgba",
      "rgba2hex",
      "rgba2rgb"
    ]
  },
  {
    "name": "instantsearch.js",
    "result": "Imports CJS (qs)",
    "keys": null
  },
  {
    "name": "creed",
    "result": "ok",
    "keys": [
      "Promise",
      "all",
      "any",
      "coroutine",
      "delay",
      "disableAsyncTraces",
      "enableAsyncTraces",
      "fromNode",
      "fulfill",
      "future",
      "getReason",
      "getValue",
      "isFulfilled",
      "isHandled",
      "isNever",
      "isPending",
      "isRejected",
      "isSettled",
      "merge",
      "never",
      "race",
      "reject",
      "resolve",
      "runNode",
      "runPromise",
      "settle",
      "shim",
      "timeout"
    ]
  },
  {
    "name": "d3-selection-multi",
    "result": "ok",
    "keys": null
  },
  {
    "name": "fkit",
    "result": "ok",
    "keys": [
      "add",
      "all",
      "always",
      "and",
      "any",
      "append",
      "apply",
      "apply2",
      "apply3",
      "applyMethod",
      "applyMethod2",
      "applyMethod3",
      "applyRight",
      "array",
      "between",
      "binary",
      "branch",
      "cartesian",
      "clamp",
      "compare",
      "compose",
      "concat",
      "concatMap",
      "copy",
      "curry",
      "dec",
      "difference",
      "differenceBy",
      "div",
      "drop",
      "dropWhile",
      "elem",
      "elemIndex",
      "elemIndices",
      "empty",
      "eq",
      "even",
      "filter",
      "find",
      "findIndex",
      "findIndices",
      "flip",
      "fold",
      "foldRight",
      "get",
      "getIn",
      "group",
      "groupBy",
      "gt",
      "gte",
      "head",
      "id",
      "inc",
      "init",
      "inits",
      "intersect",
      "intersectBy",
      "intersperse",
      "isInfixOf",
      "isPrefixOf",
      "isSuffixOf",
      "keys",
      "last",
      "length",
      "lt",
      "lte",
      "map",
      "max",
      "maximum",
      "maximumBy",
      "min",
      "minimum",
      "minimumBy",
      "mod",
      "mul",
      "negate",
      "neq",
      "not",
      "nub",
      "nubBy",
      "odd",
      "omit",
      "or",
      "pair",
      "pairs",
      "partition",
      "permutations",
      "pick",
      "prepend",
      "product",
      "randomFloat",
      "randomInt",
      "range",
      "remove",
      "removeBy",
      "replace",
      "replicate",
      "reverse",
      "sample",
      "scan",
      "scanRight",
      "set",
      "shuffle",
      "sort",
      "sortBy",
      "span",
      "splitAt",
      "string",
      "sub",
      "subsequences",
      "sum",
      "surround",
      "tail",
      "tails",
      "take",
      "takeWhile",
      "tap",
      "toLower",
      "toUpper",
      "unary",
      "uncurry",
      "union",
      "unionBy",
      "update",
      "values",
      "variadic",
      "whereAll",
      "whereAny",
      "zip",
      "zipWith"
    ]
  },
  {
    "name": "isomorphic-schema",
    "result": "Imports CJS (component-registry)",
    "keys": null
  },
  {
    "name": "joiner",
    "result": "Imports CJS (joiner)",
    "keys": null
  },
  {
    "name": "tippex",
    "result": "ok",
    "keys": [
      "erase",
      "find",
      "match",
      "replace"
    ]
  },
  {
    "name": "yjs",
    "result": "ok",
    "keys": [
      "Array",
      "Map",
      "Text",
      "Transaction",
      "UndoManager",
      "XmlElement",
      "XmlFragment",
      "XmlHook",
      "XmlText",
      "Y",
      "authProtocol",
      "awarenessProtocol",
      "createMutex",
      "decoding",
      "encoding",
      "fromRelativePosition",
      "getRelativePosition",
      "registerStruct",
      "syncProtocol"
    ]
  },
  {
    "name": "postcss-nesting",
    "result": "Imports CJS (postcss-nesting)",
    "keys": null
  },
  {
    "name": "preboot",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "rc-collapse",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rc-input-number",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rc-steps",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rc-switch",
    "result": "Uses CJS variables (require)",
    "keys": null
  },
  {
    "name": "rc-table",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "trucolor",
    "result": "Imports CJS (dateformat)",
    "keys": null
  },
  {
    "name": "wcag-contrast",
    "result": "ok",
    "keys": [
      "hex",
      "luminance",
      "rgb",
      "score"
    ]
  },
  {
    "name": "uti",
    "result": "ok",
    "keys": [
      "UTIController"
    ]
  },
  {
    "name": "blob-util",
    "result": "ok",
    "keys": [
      "arrayBufferToBinaryString",
      "arrayBufferToBlob",
      "base64StringToBlob",
      "binaryStringToArrayBuffer",
      "binaryStringToBlob",
      "blobToArrayBuffer",
      "blobToBase64String",
      "blobToBinaryString",
      "blobToDataURL",
      "canvasToBlob",
      "createBlob",
      "createObjectURL",
      "dataURLToBlob",
      "imgSrcToBlob",
      "imgSrcToDataURL",
      "revokeObjectURL"
    ]
  },
  {
    "name": "ids",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "react-inlinesvg",
    "result": "Imports CJS (httpplease)",
    "keys": null
  },
  {
    "name": "broccoli-typescript-compiler",
    "result": "Imports CJS (typescript)",
    "keys": null
  },
  {
    "name": "@cycle/isolate",
    "result": "Imports CJS (xstream)",
    "keys": null
  },
  {
    "name": "statil",
    "result": "ok",
    "keys": [
      "compileTemplate"
    ]
  },
  {
    "name": "lore",
    "result": "Imports CJS (topsort)",
    "keys": null
  },
  {
    "name": "mscgenjs",
    "result": "Imports CJS (lodash.clonedeep)",
    "keys": null
  },
  {
    "name": "pouchdb-errors",
    "result": "Imports CJS (inherits)",
    "keys": null
  },
  {
    "name": "react-measure",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-toolbox",
    "result": "Unsupported ES features",
    "keys": null
  },
  {
    "name": "immupdate",
    "result": "ok",
    "keys": [
      "DELETE",
      "deepUpdate",
      "update"
    ]
  },
  {
    "name": "d3-cloud",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "aurelia-route-recognizer",
    "result": "Imports CJS (aurelia-path)",
    "keys": null
  },
  {
    "name": "signature_pad",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "cerberus",
    "result": "ok",
    "keys": [
      "Result",
      "ValidationArrayError",
      "ValidationError",
      "ValidationObjectError",
      "ValidationOrError",
      "ValidationPropertyError",
      "ValidationTypeError",
      "Validator",
      "and",
      "any",
      "array",
      "arrayError",
      "boolean",
      "forbidden",
      "integer",
      "invalid",
      "is",
      "map",
      "mapAsync",
      "nil",
      "number",
      "object",
      "objectError",
      "or",
      "orError",
      "propertyError",
      "required",
      "string",
      "typeError",
      "valid",
      "validationError",
      "xor"
    ]
  },
  {
    "name": "cuckoo-js",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "deep-for-each",
    "result": "Imports CJS (lodash.isplainobject)",
    "keys": null
  },
  {
    "name": "runway",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "getstream",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "react-map-gl",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-sidebar",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "truwrap",
    "result": "Imports CJS (dateformat)",
    "keys": null
  },
  {
    "name": "react-google-recaptcha",
    "result": "Imports CJS (react-async-script)",
    "keys": null
  },
  {
    "name": "microcosm",
    "result": "ok",
    "keys": [
      "Action",
      "Emitter",
      "History",
      "Microcosm",
      "default",
      "get",
      "getRegistration",
      "merge",
      "set",
      "tag",
      "update"
    ]
  },
  {
    "name": "layzr.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "d3-request",
    "result": "ok",
    "keys": [
      "csv",
      "html",
      "json",
      "request",
      "text",
      "tsv",
      "xml"
    ]
  },
  {
    "name": "operator",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "quasar",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "vega-lite",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "mathutil",
    "result": "ok",
    "keys": [
      "Point",
      "Ray",
      "Rect",
      "Vector2",
      "clamp",
      "euclidean",
      "lerp",
      "manhattan",
      "max",
      "min",
      "toDegrees",
      "toRadians",
      "wrap"
    ]
  },
  {
    "name": "rc-queue-anim",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "redux-promise-middleware",
    "result": "ok",
    "keys": [
      "FULFILLED",
      "PENDING",
      "REJECTED",
      "default"
    ]
  },
  {
    "name": "datefmt",
    "result": "Uses CJS variables",
    "keys": null
  },
  {
    "name": "promise-tools",
    "result": "ok",
    "keys": [
      "TimeoutError",
      "defer",
      "delay",
      "doWhilst",
      "map",
      "parallel",
      "parallelLimit",
      "retry",
      "series",
      "timeout",
      "whilst"
    ]
  },
  {
    "name": "note-parser",
    "result": "ok",
    "keys": [
      "acc",
      "alt",
      "build",
      "chroma",
      "freq",
      "letter",
      "midi",
      "oct",
      "parse",
      "pc",
      "regex",
      "step"
    ]
  },
  {
    "name": "ng-redux",
    "result": "Imports CJS (invariant)",
    "keys": null
  },
  {
    "name": "react-input-switch",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-window",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "backbone.validation",
    "result": "Imports CJS (underscore)",
    "keys": null
  },
  {
    "name": "react-component-resizable",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "slate",
    "result": "Imports CJS (debug)",
    "keys": null
  },
  {
    "name": "kronos-service-manager",
    "result": "Imports CJS (fast-safe-stringify)",
    "keys": null
  },
  {
    "name": "translation.js",
    "result": "ok",
    "keys": [
      "baidu",
      "google",
      "youdao"
    ]
  },
  {
    "name": "rc-time-picker",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "eventdispatcher",
    "result": "Imports CJS (babel-runtime)",
    "keys": null
  },
  {
    "name": "dicom-parser",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "rollup-plugin-babel",
    "result": "Imports CJS (@babel/core)",
    "keys": null
  },
  {
    "name": "fast-png",
    "result": "Imports CJS (iobuffer)",
    "keys": null
  },
  {
    "name": "tiff",
    "result": "Imports CJS (utf8)",
    "keys": null
  },
  {
    "name": "react-split-pane",
    "result": "Imports CJS (react-style-proptype)",
    "keys": null
  },
  {
    "name": "handsontable",
    "result": "Imports CJS (@babel/polyfill/lib/noConflict)",
    "keys": null
  },
  {
    "name": "postcss-font-weights",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "postcss-short-border",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "postcss-short-color",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "postcss-short-font-size",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "postcss-short-position",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "postcss-short-size",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "postcss-short-spacing",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "component-playground",
    "result": "Imports CJS (babel-polyfill)",
    "keys": null
  },
  {
    "name": "currency.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "plug-login",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "victory-bar",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-chart",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-pie",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-scatter",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "aurelia-templating-binding",
    "result": "Imports CJS (aurelia-logging)",
    "keys": null
  },
  {
    "name": "lore-actions",
    "result": "Imports CJS (lodash/snakeCase)",
    "keys": null
  },
  {
    "name": "lore-models",
    "result": "Imports CJS (lodash/has)",
    "keys": null
  },
  {
    "name": "analytics",
    "result": "Imports CJS (analytics-utils)",
    "keys": null
  },
  {
    "name": "vue-i18n",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "ml-kmeans",
    "result": "Imports CJS (is-any-array)",
    "keys": null
  },
  {
    "name": "ml-knn",
    "result": "Imports CJS (ml-distance-euclidean)",
    "keys": null
  },
  {
    "name": "ml-naivebayes",
    "result": "Imports CJS (is-any-array)",
    "keys": null
  },
  {
    "name": "ml-pls",
    "result": "Imports CJS (is-any-array)",
    "keys": null
  },
  {
    "name": "ml-regression",
    "result": "Imports CJS (ml-kernel)",
    "keys": null
  },
  {
    "name": "ml-xsadd",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "react-youtube",
    "result": "Imports CJS (youtube-player)",
    "keys": null
  },
  {
    "name": "d3-axis",
    "result": "ok",
    "keys": [
      "axisBottom",
      "axisLeft",
      "axisRight",
      "axisTop"
    ]
  },
  {
    "name": "ractive-events-tap",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "angular-bootstrap-datetimepicker",
    "result": "Imports CJS (moment)",
    "keys": null
  },
  {
    "name": "embed-js",
    "result": "Imports CJS (is-dom)",
    "keys": null
  },
  {
    "name": "react-router-form",
    "result": "Imports CJS (get-form-data)",
    "keys": null
  },
  {
    "name": "redux-api-middleware",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "postcss-svg",
    "result": "Imports CJS (svgo)",
    "keys": null
  },
  {
    "name": "dayz",
    "result": "Imports CJS (moment-range)",
    "keys": null
  },
  {
    "name": "fixparser",
    "result": "Unsupported ES features",
    "keys": null
  },
  {
    "name": "split.js",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "common-tags",
    "result": "ok",
    "keys": [
      "TemplateTag",
      "codeBlock",
      "commaLists",
      "commaListsAnd",
      "commaListsOr",
      "html",
      "inlineArrayTransformer",
      "inlineLists",
      "oneLine",
      "oneLineCommaLists",
      "oneLineCommaListsAnd",
      "oneLineCommaListsOr",
      "oneLineInlineLists",
      "oneLineTrim",
      "removeNonPrintingValuesTransformer",
      "replaceResultTransformer",
      "replaceStringTransformer",
      "replaceSubstitutionTransformer",
      "safeHtml",
      "source",
      "splitStringTransformer",
      "stripIndent",
      "stripIndentTransformer",
      "stripIndents",
      "trimResultTransformer"
    ]
  },
  {
    "name": "redux-saga",
    "result": "ok",
    "keys": [
      "CANCEL",
      "END",
      "buffers",
      "channel",
      "default",
      "delay",
      "detach",
      "effects",
      "eventChannel",
      "runSaga",
      "takeEvery",
      "takeLatest",
      "throttle",
      "utils"
    ]
  },
  {
    "name": "umi",
    "result": "Imports CJS (react-loadable)",
    "keys": null
  },
  {
    "name": "2gl",
    "result": "Invalid ESM",
    "keys": null
  },
  {
    "name": "abyssa",
    "result": "ok",
    "keys": [
      "Router",
      "State",
      "api",
      "util"
    ]
  },
  {
    "name": "actuate",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "adaptable-text",
    "result": "Imports CJS (clamp)",
    "keys": null
  },
  {
    "name": "ag-psd",
    "result": "Imports CJS (base64-js)",
    "keys": null
  },
  {
    "name": "ahoy.js",
    "result": "Imports CJS (object-to-formdata)",
    "keys": null
  },
  {
    "name": "akasha",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "alauda",
    "result": "ok",
    "keys": [
      "basePath",
      "setBasePath"
    ]
  },
  {
    "name": "alef",
    "result": "Imports CJS (css-in-js-utils/lib/assignStyle)",
    "keys": null
  },
  {
    "name": "alphabetjs",
    "result": "Uses CJS variables (module)",
    "keys": null
  },
  {
    "name": "angular-audio-context",
    "result": "Imports CJS (rxjs)",
    "keys": null
  },
  {
    "name": "angular-bem",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "angular-busy2",
    "result": "Imports CJS (rxjs)",
    "keys": null
  },
  {
    "name": "angular-datatables",
    "result": "ok",
    "keys": [
      "DataTableDirective",
      "DataTablesModule"
    ]
  },
  {
    "name": "angular-http-etag",
    "result": "Imports CJS (angular)",
    "keys": null
  },
  {
    "name": "angular-spinners",
    "result": "Imports CJS (rxjs)",
    "keys": null
  },
  {
    "name": "angular-window-events",
    "result": "Imports CJS (angular)",
    "keys": null
  },
  {
    "name": "angular2-grid",
    "result": "Imports CJS (rxjs)",
    "keys": null
  },
  {
    "name": "angular2-modal",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "angular2-redux",
    "result": "ok",
    "keys": [
      "Actions",
      "AppStore",
      "createAppStoreFactory",
      "createAppStoreFactoryWithOptions"
    ]
  },
  {
    "name": "antwar",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "antwar-prevnext-plugin",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "aphrodite",
    "result": "Imports CJS (asap)",
    "keys": null
  },
  {
    "name": "appbase-js",
    "result": "Imports CJS (cross-fetch)",
    "keys": null
  },
  {
    "name": "applet",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "astring",
    "result": "ok",
    "keys": [
      "baseGenerator",
      "generate"
    ]
  },
  {
    "name": "asyncmachine",
    "result": "ok",
    "keys": [
      "AsyncMachine",
      "MutationTypes",
      "PipeFlags",
      "StateRelations",
      "StateStructFields",
      "Transition",
      "TransitionStepFields",
      "TransitionStepTypes",
      "default",
      "machine"
    ]
  },
  {
    "name": "atomic-ui",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "audio-controls",
    "result": "ok",
    "keys": [
      "AudioControls"
    ]
  },
  {
    "name": "audio-progress-bar",
    "result": "ok",
    "keys": [
      "ProgressBar"
    ]
  },
  {
    "name": "avatar-initials",
    "result": "Imports CJS (avatar-initials)",
    "keys": null
  },
  {
    "name": "babel-plugin-extensible-destructuring",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "bacon.atom",
    "result": "Imports CJS (baconjs)",
    "keys": null
  },
  {
    "name": "badgee",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "base64util",
    "result": "ok",
    "keys": [
      "VERSION",
      "_atob",
      "_btoa",
      "bindProto",
      "byteDecode",
      "byteEncode",
      "byteUrlDecode",
      "byteUrlEncode",
      "decode",
      "encode",
      "mb2utf8",
      "mbDecode",
      "mbEncode",
      "mbUrlDecode",
      "mbUrlEncode",
      "polyfill",
      "urlDecode",
      "urlEncode",
      "utf82mb"
    ]
  },
  {
    "name": "beam-client-node",
    "result": "Invalid ESM",
    "keys": null
  },
  {
    "name": "bellhop-iframe",
    "result": "ok",
    "keys": [
      "Bellhop",
      "BellhopEventDispatcher"
    ]
  },
  {
    "name": "bfs-path",
    "result": "ok",
    "keys": [
      "_makeLong",
      "_removeDuplicateSeps",
      "_replaceRegex",
      "basename",
      "delimiter",
      "dirname",
      "extname",
      "format",
      "isAbsolute",
      "join",
      "normalize",
      "parse",
      "posix",
      "relative",
      "resolve",
      "sep",
      "win32"
    ]
  },
  {
    "name": "bfs-process",
    "result": "Uses CJS variables (__dirname)",
    "keys": null
  },
  {
    "name": "bigfloat",
    "result": "ok",
    "keys": [
      "BigComplex32",
      "BigComplex53",
      "BigFloat32",
      "BigFloat53",
      "numberToString",
      "trimNumber"
    ]
  },
  {
    "name": "bimserverapi",
    "result": "ok",
    "keys": [
      "BimServerApiPromise",
      "BimServerApiWebSocket",
      "Model",
      "default"
    ]
  },
  {
    "name": "blockchain-wallet-client",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "bollinger-bands",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "booth",
    "result": "Not ESM (TypeScript)",
    "keys": null
  },
  {
    "name": "bootloader",
    "result": "ok",
    "keys": [
      "bootloader"
    ]
  },
  {
    "name": "bpmn-js-differ",
    "result": "ok",
    "keys": [
      "Differ",
      "diff"
    ]
  },
  {
    "name": "bridgedb",
    "result": "Imports CJS (rx-extra)",
    "keys": null
  },
  {
    "name": "brief",
    "result": "Imports CJS (brief-highlightjs)",
    "keys": null
  },
  {
    "name": "broadcast",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "browser-bunyan",
    "result": "ok",
    "keys": [
      "ConsoleFormattedStream",
      "ConsolePlainStream",
      "ConsoleRawStream",
      "DEBUG",
      "ERROR",
      "FATAL",
      "INFO",
      "Logger",
      "TRACE",
      "WARN",
      "createLogger",
      "levelFromName",
      "nameFromLevel",
      "resolveLevel",
      "safeCycles",
      "stdSerializers"
    ]
  },
  {
    "name": "browser-url",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "bulb",
    "result": "ok",
    "keys": [
      "Signal",
      "always",
      "append",
      "buffer",
      "concat",
      "concatMap",
      "cycle",
      "debounce",
      "dedupe",
      "dedupeWith",
      "delay",
      "drop",
      "dropUntil",
      "dropWhile",
      "encode",
      "filter",
      "fold",
      "hold",
      "keyboardKeys",
      "keyboardState",
      "map",
      "merge",
      "mouseButtons",
      "mousePosition",
      "mouseState",
      "prepend",
      "sample",
      "scan",
      "sequential",
      "stateMachine",
      "switchLatest",
      "switchMap",
      "take",
      "takeUntil",
      "takeWhile",
      "throttle",
      "zip",
      "zipWith"
    ]
  },
  {
    "name": "bwip-js",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "cachefactory",
    "result": "ok",
    "keys": [
      "BinaryHeap",
      "Cache",
      "CacheFactory",
      "defaults",
      "utils"
    ]
  },
  {
    "name": "cake-publish",
    "result": "Imports CJS (shell-quote)",
    "keys": null
  },
  {
    "name": "cake-version",
    "result": "Imports CJS (semver)",
    "keys": null
  },
  {
    "name": "cash-dom",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "catalog",
    "result": "Imports CJS (prismjs)",
    "keys": null
  },
  {
    "name": "cep-promise",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "cf-component-button",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "cf-component-callout",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-card",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-checkbox",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-code",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-dropdown",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-icon",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-input",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-label",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-list",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-loading",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-modal",
    "result": "Imports CJS (react-modal2)",
    "keys": null
  },
  {
    "name": "cf-component-notifications",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-page",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-progress",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-radio",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-table",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-tabs",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "cf-component-text",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-textarea",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-toggle",
    "result": "Imports CJS (react-display-name)",
    "keys": null
  },
  {
    "name": "cf-component-tooltip",
    "result": "Imports CJS (react-tooltip)",
    "keys": null
  },
  {
    "name": "cf-component-typography",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "cf-util-adwords",
    "result": "Imports CJS (lodash/once)",
    "keys": null
  },
  {
    "name": "cf-util-http-file",
    "result": "Imports CJS (isomorphic-fetch)",
    "keys": null
  },
  {
    "name": "cf-util-http-poll",
    "result": "Imports CJS (isomorphic-fetch)",
    "keys": null
  },
  {
    "name": "cf-util-markdown",
    "result": "Imports CJS (marked)",
    "keys": null
  },
  {
    "name": "chartkick",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "chats",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "check-arg-types",
    "result": "ok",
    "keys": [
      "default",
      "toType"
    ]
  },
  {
    "name": "check-preconditions",
    "result": "ok",
    "keys": [
      "check",
      "of"
    ]
  },
  {
    "name": "chirashi",
    "result": "ok",
    "keys": [
      "addClass",
      "append",
      "children",
      "clearStyle",
      "clientRect",
      "clone",
      "closest",
      "createElement",
      "delegate",
      "empty",
      "filter",
      "find",
      "findOne",
      "forEach",
      "forElements",
      "forIn",
      "getAttr",
      "getComputedStyle",
      "getData",
      "getElement",
      "getElements",
      "getHeight",
      "getHtml",
      "getProp",
      "getSize",
      "getStyleProp",
      "getWidth",
      "hasClass",
      "hide",
      "indexInParent",
      "insertAfter",
      "insertBefore",
      "isDomElement",
      "next",
      "offset",
      "on",
      "once",
      "parent",
      "parents",
      "position",
      "prev",
      "ready",
      "remove",
      "removeAttr",
      "removeClass",
      "removeData",
      "screenPosition",
      "setAttr",
      "setCssVariable",
      "setData",
      "setHeight",
      "setHtml",
      "setProp",
      "setSize",
      "setStyleProp",
      "setWidth",
      "show",
      "toggleClass",
      "transform",
      "trigger"
    ]
  },
  {
    "name": "chord-magic",
    "result": "ok",
    "keys": [
      "parse",
      "prettyPrint",
      "transpose"
    ]
  },
  {
    "name": "chromatism",
    "result": "ok",
    "keys": [
      "adapt",
      "adjacent",
      "brightness",
      "complementary",
      "contrast",
      "contrastRatio",
      "convert",
      "difference",
      "fade",
      "greyscale",
      "hue",
      "invert",
      "invertLightness",
      "mid",
      "multiply",
      "saturation",
      "sepia",
      "shade",
      "temperature",
      "tetrad",
      "triad",
      "uniformComplementary",
      "uniformTetrad",
      "uniformTriad"
    ]
  },
  {
    "name": "chrome-call",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "chromium-net-errors",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "clanviewer",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "clooney",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "collection-view",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "comlink",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "compago",
    "result": "Imports CJS (fast-deep-equal)",
    "keys": null
  },
  {
    "name": "compilerr",
    "result": "Imports CJS (indefinite-article)",
    "keys": null
  },
  {
    "name": "conductor",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "connect.io",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "console-group",
    "result": "ok",
    "keys": [
      "install",
      "teardown"
    ]
  },
  {
    "name": "cookiejs",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "copee",
    "result": "ok",
    "keys": [
      "fromElement",
      "toClipboard"
    ]
  },
  {
    "name": "cornerstone-wado-image-loader",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "create-store",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "cropper",
    "result": "Imports CJS (jquery)",
    "keys": null
  },
  {
    "name": "cssprefix",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "csx",
    "result": "ok",
    "keys": [
      "ColorHelper",
      "background",
      "border",
      "borderColor",
      "borderStyle",
      "borderWidth",
      "calc",
      "color",
      "deg",
      "em",
      "hsl",
      "hsla",
      "important",
      "linearGradient",
      "list",
      "matrix",
      "matrix3d",
      "params",
      "percent",
      "perspective",
      "px",
      "quote",
      "rad",
      "rem",
      "repeatingLinearGradient",
      "rgb",
      "rgba",
      "rotate",
      "rotate3d",
      "rotateX",
      "rotateY",
      "rotateZ",
      "scale",
      "scale3d",
      "scaleX",
      "scaleY",
      "scaleZ",
      "skew",
      "skewX",
      "skewY",
      "transform",
      "translate",
      "translate3d",
      "translateX",
      "translateY",
      "translateZ",
      "turn",
      "url",
      "viewHeight",
      "viewWidth"
    ]
  },
  {
    "name": "d2l-intl",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "d3-exploder",
    "result": "ok",
    "keys": [
      "exploder",
      "version"
    ]
  },
  {
    "name": "d3-geo",
    "result": "ok",
    "keys": [
      "geoAlbers",
      "geoAlbersUsa",
      "geoArea",
      "geoAzimuthalEqualArea",
      "geoAzimuthalEqualAreaRaw",
      "geoAzimuthalEquidistant",
      "geoAzimuthalEquidistantRaw",
      "geoBounds",
      "geoCentroid",
      "geoCircle",
      "geoClipAntimeridian",
      "geoClipCircle",
      "geoClipExtent",
      "geoClipRectangle",
      "geoConicConformal",
      "geoConicConformalRaw",
      "geoConicEqualArea",
      "geoConicEqualAreaRaw",
      "geoConicEquidistant",
      "geoConicEquidistantRaw",
      "geoContains",
      "geoDistance",
      "geoEqualEarth",
      "geoEqualEarthRaw",
      "geoEquirectangular",
      "geoEquirectangularRaw",
      "geoGnomonic",
      "geoGnomonicRaw",
      "geoGraticule",
      "geoGraticule10",
      "geoIdentity",
      "geoInterpolate",
      "geoLength",
      "geoMercator",
      "geoMercatorRaw",
      "geoNaturalEarth1",
      "geoNaturalEarth1Raw",
      "geoOrthographic",
      "geoOrthographicRaw",
      "geoPath",
      "geoProjection",
      "geoProjectionMutator",
      "geoRotation",
      "geoStereographic",
      "geoStereographicRaw",
      "geoStream",
      "geoTransform",
      "geoTransverseMercator",
      "geoTransverseMercatorRaw"
    ]
  },
  {
    "name": "d3-hexbin",
    "result": "ok",
    "keys": [
      "hexbin"
    ]
  },
  {
    "name": "d3-hierarchy",
    "result": "ok",
    "keys": [
      "cluster",
      "hierarchy",
      "pack",
      "packEnclose",
      "packSiblings",
      "partition",
      "stratify",
      "tree",
      "treemap",
      "treemapBinary",
      "treemapDice",
      "treemapResquarify",
      "treemapSlice",
      "treemapSliceDice",
      "treemapSquarify"
    ]
  },
  {
    "name": "d3-jetpack",
    "result": "ok",
    "keys": [
      "ascendingKey",
      "attachTooltip",
      "clamp",
      "conventions",
      "descendingKey",
      "drawAxis",
      "f",
      "interval",
      "loadData",
      "nestBy",
      "parseAttributes",
      "polygonClip",
      "round",
      "timeout",
      "timer",
      "wordwrap"
    ]
  },
  {
    "name": "d3-polygon",
    "result": "ok",
    "keys": [
      "polygonArea",
      "polygonCentroid",
      "polygonContains",
      "polygonHull",
      "polygonLength"
    ]
  },
  {
    "name": "d3-quadtree",
    "result": "ok",
    "keys": [
      "quadtree"
    ]
  },
  {
    "name": "d3-random",
    "result": "ok",
    "keys": [
      "randomBates",
      "randomExponential",
      "randomIrwinHall",
      "randomLogNormal",
      "randomNormal",
      "randomUniform"
    ]
  },
  {
    "name": "d3-sankey",
    "result": "ok",
    "keys": [
      "sankey",
      "sankeyCenter",
      "sankeyJustify",
      "sankeyLeft",
      "sankeyLinkHorizontal",
      "sankeyRight"
    ]
  },
  {
    "name": "d3-transition",
    "result": "ok",
    "keys": [
      "active",
      "interrupt",
      "transition"
    ]
  },
  {
    "name": "d3-voronoi",
    "result": "ok",
    "keys": [
      "voronoi"
    ]
  },
  {
    "name": "dat.gui",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "date-frequency",
    "result": "Imports CJS (debug)",
    "keys": null
  },
  {
    "name": "decaffeinate",
    "result": "Imports CJS (decaffeinate-coffeescript)",
    "keys": null
  },
  {
    "name": "decaffeinate-parser",
    "result": "Imports CJS (decaffeinate-coffeescript2)",
    "keys": null
  },
  {
    "name": "deck-of-cards",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "deck.gl",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "delegated-events",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "demeter",
    "result": "Imports CJS (deep-equal)",
    "keys": null
  },
  {
    "name": "detergent",
    "result": "Imports CJS (he)",
    "keys": null
  },
  {
    "name": "deuteranopia",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "device-detector",
    "result": "ok",
    "keys": [
      "parse"
    ]
  },
  {
    "name": "device.js",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "dice-roll",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "diffhtml",
    "result": "ok",
    "keys": [
      "Internals",
      "VERSION",
      "addTransitionState",
      "createTree",
      "default",
      "html",
      "innerHTML",
      "outerHTML",
      "release",
      "removeTransitionState",
      "use"
    ]
  },
  {
    "name": "disable-scroll",
    "result": "Imports CJS (scrollingelement)",
    "keys": null
  },
  {
    "name": "dislocator",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "distpicker",
    "result": "Imports CJS (jquery)",
    "keys": null
  },
  {
    "name": "docks",
    "result": "Imports CJS (@babel/parser)",
    "keys": null
  },
  {
    "name": "dom-observer",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "dom-ruler",
    "result": "ok",
    "keys": [
      "getLayout",
      "getStyles",
      "measureText"
    ]
  },
  {
    "name": "dominject",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "dragon",
    "result": "Imports CJS (crossvent)",
    "keys": null
  },
  {
    "name": "drift-zoom",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "dygraphs",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "eases-jsnext",
    "result": "ok",
    "keys": [
      "backIn",
      "backInOut",
      "backOut",
      "bounceIn",
      "bounceInOut",
      "bounceOut",
      "circIn",
      "circInOut",
      "circOut",
      "cubicIn",
      "cubicInOut",
      "cubicOut",
      "elasticIn",
      "elasticInOut",
      "elasticOut",
      "expoIn",
      "expoInOut",
      "expoOut",
      "linear",
      "quadIn",
      "quadInOut",
      "quadOut",
      "quartIn",
      "quartInOut",
      "quartOut",
      "quintIn",
      "quintInOut",
      "quintOut",
      "sineIn",
      "sineInOut",
      "sineOut"
    ]
  },
  {
    "name": "elsinore",
    "result": "ok",
    "keys": [
      "AsyncEntitySet",
      "BitField",
      "Component",
      "ComponentDef",
      "ComponentRegistry",
      "Entity",
      "EntityDispatch",
      "EntityFilter",
      "EntityProcessor",
      "EntitySet",
      "Query",
      "Registry",
      "getEntityIDFromID",
      "getEntitySetIDFromID",
      "hash",
      "parseJSON",
      "setEntityIDFromID",
      "stringify"
    ]
  },
  {
    "name": "epubjs",
    "result": "Imports CJS (url-polyfill)",
    "keys": null
  },
  {
    "name": "esparse",
    "result": "ok",
    "keys": [
      "AST",
      "parse",
      "print",
      "resolveScopes"
    ]
  },
  {
    "name": "esri-leaflet-geocoder",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "esri-leaflet-renderers",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "event-target",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "eztvapi",
    "result": "Imports CJS (axios)",
    "keys": null
  },
  {
    "name": "fannypack",
    "result": "Imports CJS (styled-selector)",
    "keys": null
  },
  {
    "name": "feiertagejs",
    "result": "ok",
    "keys": [
      "addTranslation",
      "getHolidayByDate",
      "getHolidays",
      "getLanguage",
      "isHoliday",
      "isSpecificHoliday",
      "isSunOrHoliday",
      "setLanguage"
    ]
  },
  {
    "name": "filament",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "filmstrip2gif",
    "result": "Imports CJS (data-uri-to-blob)",
    "keys": null
  },
  {
    "name": "flakeid",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "floatl",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "fluent",
    "result": "ok",
    "keys": [
      "FluentBundle",
      "FluentDateTime",
      "FluentError",
      "FluentNumber",
      "FluentResource",
      "FluentType",
      "ftl"
    ]
  },
  {
    "name": "form.js",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "formula-parser",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "framesync",
    "result": "ok",
    "keys": [
      "cancelSync",
      "default",
      "getFrameData"
    ]
  },
  {
    "name": "fromnow",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "fullscream",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "gatsby",
    "result": "Not ESM (jsx)",
    "keys": null
  },
  {
    "name": "geniejs",
    "result": "Wrong ESM entry point",
    "keys": null
  },
  {
    "name": "geometry-interfaces",
    "result": "ok",
    "keys": [
      "DOMMatrix",
      "DOMMatrixReadOnly",
      "DOMPoint",
      "DOMPointReadOnly"
    ]
  },
  {
    "name": "gestalt",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "get-audio-duration",
    "result": "Imports CJS (ffprobe-static)",
    "keys": null
  },
  {
    "name": "get-media-size",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "get-property-descriptor",
    "result": "Wrong ESM entry point",
    "keys": null
  },
  {
    "name": "get-video-duration",
    "result": "Imports CJS (ffprobe-static)",
    "keys": null
  },
  {
    "name": "gg-entities",
    "result": "ok",
    "keys": [
      "EntityManager",
      "SystemType"
    ]
  },
  {
    "name": "gia-toolkit",
    "result": "ok",
    "keys": [
      "Promise",
      "Queue",
      "addClass",
      "addCommas",
      "addWheelListener",
      "assign",
      "backIn",
      "backInOut",
      "backOut",
      "bounceIn",
      "bounceInOut",
      "bounceOut",
      "bucket",
      "circIn",
      "circInOut",
      "circOut",
      "clamp",
      "csvToArray",
      "csvToJson",
      "cubicIn",
      "cubicInOut",
      "cubicOut",
      "debounce",
      "debug",
      "deepClone",
      "deepEqual",
      "elasticIn",
      "elasticInOut",
      "elasticOut",
      "expoIn",
      "expoInOut",
      "expoOut",
      "find",
      "forceRedraw",
      "fullscreen",
      "get",
      "getGuid",
      "haversine",
      "history",
      "interpolate",
      "isArray",
      "isNumeric",
      "isObject",
      "jsonp",
      "linear",
      "linearScale",
      "loadAudio",
      "loadImage",
      "mapSequence",
      "noop",
      "now",
      "pad",
      "pickRandom",
      "post",
      "pythag",
      "qinticIn",
      "qinticInOut",
      "qinticOut",
      "quadIn",
      "quadInOut",
      "quadOut",
      "quarticIn",
      "quarticInOut",
      "quarticOut",
      "query",
      "queryAll",
      "rAF",
      "random",
      "range",
      "reindex",
      "removeClass",
      "shuffle",
      "sign",
      "sineIn",
      "sineInOut",
      "sineOut",
      "slugify",
      "storage",
      "throttle",
      "toTitleCase",
      "tween",
      "wait",
      "webgl"
    ]
  },
  {
    "name": "glitch-canvas",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "graph-scroll",
    "result": "ok",
    "keys": [
      "graphScroll"
    ]
  },
  {
    "name": "gregorian",
    "result": "ok",
    "keys": [
      "addTime",
      "addTimeSequence",
      "compareTime",
      "diffTime",
      "getLocal",
      "getLocalGroup",
      "getUTC",
      "getUTCGroup",
      "isDate",
      "reform",
      "reformWithLocale",
      "reformWithOverrides",
      "resetLocal",
      "resetUTC",
      "setLocal",
      "setLocalGroup",
      "setUTC",
      "setUTCGroup",
      "subtractTime",
      "subtractTimeSequence"
    ]
  },
  {
    "name": "h.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "halcyon",
    "result": "ok",
    "keys": [
      "F",
      "T",
      "add",
      "all",
      "always",
      "any",
      "append",
      "assoc",
      "chain",
      "clamp",
      "compact",
      "complement",
      "compose",
      "concat",
      "cond",
      "contains",
      "curry",
      "curryN",
      "dec",
      "dissoc",
      "divide",
      "drop",
      "dropUntil",
      "dropWhile",
      "empty",
      "equals",
      "filter",
      "find",
      "findIndex",
      "findLast",
      "flatMap",
      "flatten",
      "flattenDeep",
      "flip",
      "fmap",
      "foldl",
      "foldr",
      "forEach",
      "fromPairs",
      "groupBy",
      "gt",
      "gte",
      "has",
      "head",
      "identical",
      "identity",
      "ifElse",
      "inc",
      "init",
      "insert",
      "intersection",
      "isEmpty",
      "isEven",
      "isNil",
      "isOdd",
      "isType",
      "join",
      "juxt",
      "keys",
      "last",
      "length",
      "lens",
      "lensProp",
      "lt",
      "lte",
      "map",
      "mapKeys",
      "mapi",
      "match",
      "max",
      "mean",
      "merge",
      "min",
      "multiply",
      "of",
      "omit",
      "over",
      "pad",
      "padLeft",
      "padRight",
      "pair",
      "partition",
      "path",
      "pick",
      "pipe",
      "prepend",
      "prop",
      "propEq",
      "range",
      "rangeBy",
      "reduce",
      "reduceRight",
      "reject",
      "replace",
      "reverse",
      "scan",
      "set",
      "split",
      "subtract",
      "sum",
      "tail",
      "take",
      "takeUntil",
      "takeWhile",
      "tap",
      "test",
      "times",
      "toLower",
      "toPairs",
      "toUpper",
      "trace",
      "transform",
      "trim",
      "type",
      "unique",
      "unless",
      "values",
      "view",
      "when",
      "where",
      "without",
      "zip",
      "zipObj"
    ]
  },
  {
    "name": "hanzo.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "hardcore",
    "result": "Imports CJS (string.prototype.padend)",
    "keys": null
  },
  {
    "name": "hash-handler",
    "result": "Imports CJS (query-string)",
    "keys": null
  },
  {
    "name": "horologe",
    "result": "Imports CJS (more-events)",
    "keys": null
  },
  {
    "name": "hotkeys-js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "htm",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "htmlelement.polyfills",
    "result": "Imports CJS (htmlelement)",
    "keys": null
  },
  {
    "name": "ibex",
    "result": "Imports CJS (nightingale-levels)",
    "keys": null
  },
  {
    "name": "idb",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "image-js",
    "result": "Imports CJS (fast-bmp)",
    "keys": null
  },
  {
    "name": "image-q",
    "result": "Imports CJS (core-js)",
    "keys": null
  },
  {
    "name": "imageviewer",
    "result": "Imports CJS (jquery)",
    "keys": null
  },
  {
    "name": "in-stalk",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "inferno-component",
    "result": "ok",
    "keys": [
      "Component",
      "default"
    ]
  },
  {
    "name": "inferno-server",
    "result": "ok",
    "keys": [
      "RenderQueueStream",
      "RenderStream",
      "renderToStaticMarkup",
      "renderToString",
      "streamAsStaticMarkup",
      "streamAsString",
      "streamQueueAsStaticMarkup",
      "streamQueueAsString"
    ]
  },
  {
    "name": "ionic-native",
    "result": "Imports CJS (rxjs)",
    "keys": null
  },
  {
    "name": "iphone-inline-video",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "is-in-viewport",
    "result": "Imports CJS (jquery)",
    "keys": null
  },
  {
    "name": "item-selection",
    "result": "ok",
    "keys": [
      "ItemSelection",
      "default"
    ]
  },
  {
    "name": "iter-tools",
    "result": "Imports CJS (dequeue)",
    "keys": null
  },
  {
    "name": "jajax.js",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "jamilih",
    "result": "ok",
    "keys": [
      "$",
      "$$",
      "body",
      "default",
      "jml",
      "nbsp"
    ]
  },
  {
    "name": "jax.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "jelly",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "jexia-sdk-js",
    "result": "Imports CJS (reflect-metadata)",
    "keys": null
  },
  {
    "name": "jquery.autobox",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "js-joda",
    "result": "ok",
    "keys": [
      "ArithmeticException",
      "ChronoField",
      "ChronoLocalDate",
      "ChronoLocalDateTime",
      "ChronoUnit",
      "ChronoZonedDateTime",
      "Clock",
      "DateTimeException",
      "DateTimeFormatter",
      "DateTimeFormatterBuilder",
      "DateTimeParseException",
      "DayOfWeek",
      "DecimalStyle",
      "Duration",
      "IllegalArgumentException",
      "IllegalStateException",
      "Instant",
      "IsoChronology",
      "IsoFields",
      "LocalDate",
      "LocalDateTime",
      "LocalTime",
      "Month",
      "MonthDay",
      "NullPointerException",
      "Period",
      "ResolverStyle",
      "SignStyle",
      "Temporal",
      "TemporalAccessor",
      "TemporalAdjuster",
      "TemporalAdjusters",
      "TemporalAmount",
      "TemporalField",
      "TemporalQueries",
      "TemporalQuery",
      "TemporalUnit",
      "TextStyle",
      "UnsupportedTemporalTypeException",
      "ValueRange",
      "Year",
      "YearConstants",
      "YearMonth",
      "ZoneId",
      "ZoneOffset",
      "ZoneOffsetTransition",
      "ZoneRegion",
      "ZoneRules",
      "ZoneRulesProvider",
      "ZonedDateTime",
      "_",
      "convert",
      "nativeJs",
      "use"
    ]
  },
  {
    "name": "jsxstyle",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "jump.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "juxt",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "kash",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "keysavcore",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "keysim",
    "result": "ok",
    "keys": [
      "KeyEvents",
      "Keyboard",
      "Keystroke"
    ]
  },
  {
    "name": "kirby-strings",
    "result": "ok",
    "keys": [
      "default",
      "kirby",
      "metaKnight",
      "modernKirby"
    ]
  },
  {
    "name": "kivi",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "ko-component-router",
    "result": "Imports CJS (knockout)",
    "keys": null
  },
  {
    "name": "kronos-service-admin",
    "result": "Uses CJS variables (require)",
    "keys": null
  },
  {
    "name": "kronos-service-consul",
    "result": "Imports CJS (fast-safe-stringify)",
    "keys": null
  },
  {
    "name": "kronos-step-passthrough",
    "result": "Imports CJS (fast-safe-stringify)",
    "keys": null
  },
  {
    "name": "kronos-test-interceptor",
    "result": "Imports CJS (ava)",
    "keys": null
  },
  {
    "name": "kuroshiro",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "lain",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "lexy",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "lines-and-columns",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "locale-code",
    "result": "Imports CJS (iso-3166-1-alpha-2)",
    "keys": null
  },
  {
    "name": "locate-java-home",
    "result": "Imports CJS (semver)",
    "keys": null
  },
  {
    "name": "loot-table",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "lore-reducers",
    "result": "Imports CJS (lodash/find)",
    "keys": null
  },
  {
    "name": "low-browser",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "luminous-lightbox",
    "result": "ok",
    "keys": [
      "Luminous",
      "LuminousGallery"
    ]
  },
  {
    "name": "macrotask",
    "result": "ok",
    "keys": [
      "clear",
      "run"
    ]
  },
  {
    "name": "maquette",
    "result": "ok",
    "keys": [
      "createCache",
      "createMapping",
      "createProjector",
      "dom",
      "h"
    ]
  },
  {
    "name": "marionette.toolkit",
    "result": "Imports CJS (marionette)",
    "keys": null
  },
  {
    "name": "markdown-to-jsx",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "marky-marked",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "martian-cidr",
    "result": "ok",
    "keys": [
      "IPv4",
      "IPv6",
      "IPv6Exception"
    ]
  },
  {
    "name": "material-datetime-picker",
    "result": "Imports CJS (rome)",
    "keys": null
  },
  {
    "name": "material-ui-express",
    "result": "Invalid ESM",
    "keys": null
  },
  {
    "name": "md",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "meta.js",
    "result": "Imports CJS (ethereumjs-util)",
    "keys": null
  },
  {
    "name": "metadata-detector",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "metismenu",
    "result": "Imports CJS (jquery)",
    "keys": null
  },
  {
    "name": "midi-json-parser",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "midi-player",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "mithril-infinite",
    "result": "Imports CJS (verge)",
    "keys": null
  },
  {
    "name": "mithril-slider",
    "result": "Imports CJS (hammerjs)",
    "keys": null
  },
  {
    "name": "mocha-parallel-tests",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "mock-local-storage",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "mocker-data-generator",
    "result": "Imports CJS (chance)",
    "keys": null
  },
  {
    "name": "moltin",
    "result": "Imports CJS (fetch-everywhere)",
    "keys": null
  },
  {
    "name": "motive",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "movie-list",
    "result": "Imports CJS (debug)",
    "keys": null
  },
  {
    "name": "moving-averages",
    "result": "ok",
    "keys": [
      "dma",
      "ema",
      "ma",
      "sma",
      "wma"
    ]
  },
  {
    "name": "mozaik-ext-image",
    "result": "Imports CJS (vivus)",
    "keys": null
  },
  {
    "name": "mudjs",
    "result": "Imports CJS (uuid)",
    "keys": null
  },
  {
    "name": "multiple-methods",
    "result": "Imports CJS (lodash)",
    "keys": null
  },
  {
    "name": "myscript",
    "result": "ok",
    "keys": [
      "Constants",
      "DefaultBehaviors",
      "DefaultConfiguration",
      "DefaultPenStyle",
      "DefaultTheme",
      "Editor",
      "InkModel",
      "LoggerConfig",
      "RecognizerContext",
      "default",
      "getAvailableLanguageList",
      "register"
    ]
  },
  {
    "name": "mysqldump",
    "result": "Imports CJS (sql-formatter)",
    "keys": null
  },
  {
    "name": "name-suggestion-index",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "narou",
    "result": "Imports CJS (moment)",
    "keys": null
  },
  {
    "name": "navbar",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "navi",
    "result": "Imports CJS (warning)",
    "keys": null
  },
  {
    "name": "navigator.sendbeacon",
    "result": "ok",
    "keys": null
  },
  {
    "name": "navigo",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "nestedtypes",
    "result": "Imports CJS (underscore)",
    "keys": null
  },
  {
    "name": "netflux",
    "result": "Imports CJS (uws)",
    "keys": null
  },
  {
    "name": "neverland",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "ng-bootstrap",
    "result": "Imports CJS (rxjs)",
    "keys": null
  },
  {
    "name": "ng-daterangepicker",
    "result": "Wrong ESM entry point",
    "keys": null
  },
  {
    "name": "ng2-charts",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "ng2-datepicker",
    "result": "Wrong ESM entry point",
    "keys": null
  },
  {
    "name": "ng2-dragula",
    "result": "Imports CJS (dragula)",
    "keys": null
  },
  {
    "name": "ng2-file-upload",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "ng2-handsontable",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "ng2-highcharts",
    "result": "Imports CJS (rxjs)",
    "keys": null
  },
  {
    "name": "ng2-select",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "ng2-slimscroll",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "ng2-translate",
    "result": "Imports CJS (rxjs)",
    "keys": null
  },
  {
    "name": "ng2-ui-auth",
    "result": "ok",
    "keys": [
      "AuthService",
      "BrowserStorageService",
      "CONFIG_OPTIONS",
      "ConfigService",
      "JwtInterceptor",
      "LocalService",
      "Ng2UiAuthModule",
      "Oauth1Service",
      "Oauth2Service",
      "OauthService",
      "PopupService",
      "SharedService",
      "StorageService",
      "StorageType"
    ]
  },
  {
    "name": "nipplejs",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "node-diff3",
    "result": "ok",
    "keys": [
      "LCS",
      "diff3Merge",
      "diff3MergeIndices",
      "diffComm",
      "diffIndices",
      "diffPatch",
      "invertPatch",
      "merge",
      "mergeDigIn",
      "patch",
      "stripPatch"
    ]
  },
  {
    "name": "node-package",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "noodle",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "now-playing",
    "result": "ok",
    "keys": [
      "NowPlaying"
    ]
  },
  {
    "name": "nuka-carousel",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "nusmoderator",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "nydus-client",
    "result": "Imports CJS (engine)",
    "keys": null
  },
  {
    "name": "o",
    "result": "Imports CJS (circle-assign)",
    "keys": null
  },
  {
    "name": "object-boolean-combinations",
    "result": "Imports CJS (lodash.pull)",
    "keys": null
  },
  {
    "name": "object-wrapper",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "objectmodel",
    "result": "ok",
    "keys": [
      "ArrayModel",
      "BasicModel",
      "FunctionModel",
      "MapModel",
      "Model",
      "ObjectModel",
      "SetModel"
    ]
  },
  {
    "name": "observable-socket",
    "result": "Imports CJS (debug)",
    "keys": null
  },
  {
    "name": "onemit",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "optimal-select",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "orama",
    "result": "Imports CJS (lodash/get)",
    "keys": null
  },
  {
    "name": "oscilloscope",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "outdent",
    "result": "ok",
    "keys": [
      "default",
      "outdent"
    ]
  },
  {
    "name": "overmind",
    "result": "Imports CJS (is-plain-obj)",
    "keys": null
  },
  {
    "name": "overprint",
    "result": "ok",
    "keys": [
      "BitmapFont",
      "BitmapTerminal",
      "Char",
      "Color",
      "Font",
      "Glyph",
      "Terminal"
    ]
  },
  {
    "name": "phoenix-elixir",
    "result": "ok",
    "keys": [
      "Ajax",
      "Channel",
      "LongPoll",
      "Presence",
      "Socket"
    ]
  },
  {
    "name": "picknick",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "pixi-multistyle-text",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "pkijs",
    "result": "Imports CJS (asn1js)",
    "keys": null
  },
  {
    "name": "please-wait",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "plonk",
    "result": "ok",
    "keys": [
      "Deferred",
      "Timer",
      "clamp",
      "delay",
      "drunk",
      "dust",
      "env",
      "exp",
      "frames",
      "metro",
      "ms",
      "now",
      "rand",
      "scale",
      "sine",
      "toMilliseconds",
      "toNumber",
      "wait",
      "walk"
    ]
  },
  {
    "name": "plug-socket",
    "result": "Imports CJS (ws)",
    "keys": null
  },
  {
    "name": "pokelab",
    "result": "ok",
    "keys": [
      "Languages",
      "Natures",
      "Pokedex",
      "Stats",
      "Types"
    ]
  },
  {
    "name": "polestar",
    "result": "Imports CJS (semver)",
    "keys": null
  },
  {
    "name": "polymer-redux",
    "result": "Imports CJS (global/window)",
    "keys": null
  },
  {
    "name": "polythene-theme",
    "result": "ok",
    "keys": [
      "componentConfig",
      "vars"
    ]
  },
  {
    "name": "pop",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "postcss-normalize",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "postcss-short",
    "result": "Imports CJS (postcss)",
    "keys": null
  },
  {
    "name": "postcss-time-machine",
    "result": "Imports CJS (postcss-values-parser)",
    "keys": null
  },
  {
    "name": "posthtml-inline-assets",
    "result": "Imports CJS (fse)",
    "keys": null
  },
  {
    "name": "pouchdb-abstract-mapreduce",
    "result": "Imports CJS (inherits)",
    "keys": null
  },
  {
    "name": "pouchdb-ajax",
    "result": "Imports CJS (inherits)",
    "keys": null
  },
  {
    "name": "pouchdb-mapreduce",
    "result": "Imports CJS (inherits)",
    "keys": null
  },
  {
    "name": "pratt-parser",
    "result": "ok",
    "keys": [
      "EOFToken",
      "IdentifierToken",
      "KeywordToken",
      "LineCommentToken",
      "NumberToken",
      "OperatorToken",
      "Parser",
      "StringToken",
      "Tokenizer",
      "WhiteSpaceToken"
    ]
  },
  {
    "name": "preact-compat",
    "result": "Imports CJS (prop-types)",
    "keys": null
  },
  {
    "name": "preact-router",
    "result": "ok",
    "keys": [
      "Link",
      "Route",
      "Router",
      "default",
      "getCurrentUrl",
      "route",
      "subscribers"
    ]
  },
  {
    "name": "previous-date-range",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "project-starter",
    "result": "Imports CJS (cpr)",
    "keys": null
  },
  {
    "name": "promise-mock",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "pss",
    "result": "Imports CJS (prop-types)",
    "keys": null
  },
  {
    "name": "qminder-api",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "quasar-framework",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "query-result",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "quicktube",
    "result": "Imports CJS (lodash/throttle)",
    "keys": null
  },
  {
    "name": "radon",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "radon-typeahead",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "random",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "rc-cascader",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rc-form",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rc-scroll-anim",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rc-socket.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "rc-tree-select",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rc-tween-one",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-admin",
    "result": "Imports CJS (inflection)",
    "keys": null
  },
  {
    "name": "react-alert",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-atomic-molecule",
    "result": "Imports CJS (class-lib)",
    "keys": null
  },
  {
    "name": "react-audio-recorder",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-avatar",
    "result": "Imports CJS (md5)",
    "keys": null
  },
  {
    "name": "react-bootcards",
    "result": "Imports CJS (warning)",
    "keys": null
  },
  {
    "name": "react-boxplot",
    "result": "Uses CJS variables (require)",
    "keys": null
  },
  {
    "name": "react-bs-notifier",
    "result": "Imports CJS (react-jss)",
    "keys": null
  },
  {
    "name": "react-charts",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-cl-audio-player",
    "result": "Imports CSS",
    "keys": null
  },
  {
    "name": "react-composer",
    "result": "Imports CJS (prop-types)",
    "keys": null
  },
  {
    "name": "react-contextmenu",
    "result": "Imports CJS (object-assign)",
    "keys": null
  },
  {
    "name": "react-filtered-multiselect",
    "result": "Imports CJS (prop-types)",
    "keys": null
  },
  {
    "name": "react-flexr",
    "result": "Imports CJS (stilr)",
    "keys": null
  },
  {
    "name": "react-form-controlled",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-ga",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-geosuggest",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "react-gist",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-globalize",
    "result": "Imports CJS (globalize)",
    "keys": null
  },
  {
    "name": "react-gm",
    "result": "Unsupported ES features",
    "keys": null
  },
  {
    "name": "react-google-calendar-events-list",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-google-charts",
    "result": "Imports CJS (react-load-script)",
    "keys": null
  },
  {
    "name": "react-google-places-suggest",
    "result": "Imports CJS (stylis)",
    "keys": null
  },
  {
    "name": "react-i18next",
    "result": "Imports CJS (hoist-non-react-statics)",
    "keys": null
  },
  {
    "name": "react-idle-timer",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-image",
    "result": "Imports CJS (react-image)",
    "keys": null
  },
  {
    "name": "react-imgix",
    "result": "Imports CJS (warning)",
    "keys": null
  },
  {
    "name": "react-input-toggle",
    "result": "Unsupported ES features",
    "keys": null
  },
  {
    "name": "react-isomorphic-render",
    "result": "Imports CJS (history)",
    "keys": null
  },
  {
    "name": "react-ive",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-joyride",
    "result": "Imports CJS (scrollparent)",
    "keys": null
  },
  {
    "name": "react-keydown",
    "result": "Imports CJS (react-dom)",
    "keys": null
  },
  {
    "name": "react-leaflet-draw",
    "result": "Imports CJS (leaflet-draw)",
    "keys": null
  },
  {
    "name": "react-material-design",
    "result": "Imports CJS (warning)",
    "keys": null
  },
  {
    "name": "react-md",
    "result": "Imports CJS (react-motion)",
    "keys": null
  },
  {
    "name": "react-media",
    "result": "Imports CJS (invariant)",
    "keys": null
  },
  {
    "name": "react-mentions",
    "result": "Imports CJS (substyle)",
    "keys": null
  },
  {
    "name": "react-model",
    "result": "Imports extensionless module",
    "keys": null
  },
  {
    "name": "react-native-storage",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "react-native-web",
    "result": "Imports CJS (react-timer-mixin)",
    "keys": null
  },
  {
    "name": "react-photo-gallery",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-progress-label",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-promise",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-query-builder",
    "result": "Imports CJS (immutable)",
    "keys": null
  },
  {
    "name": "react-ranger",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "react-router5",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-share",
    "result": "Imports CJS (classnames)",
    "keys": null
  },
  {
    "name": "react-simple-tooltip",
    "result": "Imports CJS (stylis)",
    "keys": null
  },
  {
    "name": "react-split",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-state",
    "result": "Imports CJS (hoist-non-react-statics)",
    "keys": null
  },
  {
    "name": "react-state-hoc",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-sticky-box",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-stockcharts",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-storehouse",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-styling",
    "result": "Imports CJS (style-builder)",
    "keys": null
  },
  {
    "name": "react-svg",
    "result": "Imports CJS (prop-types)",
    "keys": null
  },
  {
    "name": "react-svg-line-chart",
    "result": "Imports CJS (stylis)",
    "keys": null
  },
  {
    "name": "react-svg-piechart",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-table",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "react-translate-maker",
    "result": "Imports CJS (translate-maker)",
    "keys": null
  },
  {
    "name": "react-vertical-timeline",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "react-virtualized",
    "result": "Imports CJS (prop-types)",
    "keys": null
  },
  {
    "name": "react-waypoint",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "reactabular",
    "result": "ok",
    "keys": null
  },
  {
    "name": "reactor-ui",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "readium-cfi-js",
    "result": "ok",
    "keys": [
      "Generator",
      "Instructions",
      "Interpreter",
      "Parser"
    ]
  },
  {
    "name": "recharts",
    "result": "Imports CJS (react-resize-detector)",
    "keys": null
  },
  {
    "name": "reconnecting-websocket",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "redash",
    "result": "ok",
    "keys": [
      "F",
      "T",
      "add",
      "all",
      "always",
      "any",
      "append",
      "assoc",
      "assocIn",
      "chain",
      "clamp",
      "compact",
      "complement",
      "compose",
      "concat",
      "cond",
      "contains",
      "curry",
      "curryN",
      "dec",
      "difference",
      "dissoc",
      "divide",
      "drop",
      "dropUntil",
      "dropWhile",
      "empty",
      "equals",
      "everyPred",
      "filter",
      "find",
      "findIndex",
      "findLast",
      "flatMap",
      "flatten",
      "flattenDeep",
      "foldl",
      "foldr",
      "forEach",
      "fromPairs",
      "get",
      "getIn",
      "groupBy",
      "has",
      "head",
      "identical",
      "identity",
      "ifElse",
      "inc",
      "init",
      "insert",
      "interpose",
      "intersection",
      "invert",
      "isEmpty",
      "isEven",
      "isNil",
      "isOdd",
      "isType",
      "join",
      "juxt",
      "keys",
      "last",
      "length",
      "map",
      "mapKeys",
      "mapi",
      "match",
      "matches",
      "max",
      "mean",
      "merge",
      "min",
      "multiply",
      "omit",
      "pad",
      "padLeft",
      "padRight",
      "partition",
      "pick",
      "pipe",
      "prepend",
      "range",
      "rangeBy",
      "reduce",
      "reduceRight",
      "reject",
      "replace",
      "reverse",
      "scan",
      "split",
      "subtract",
      "sum",
      "tail",
      "take",
      "takeUntil",
      "takeWhile",
      "tap",
      "test",
      "times",
      "toLower",
      "toPairs",
      "toUpper",
      "trace",
      "transform",
      "trim",
      "type",
      "unique",
      "unless",
      "update",
      "updateIn",
      "values",
      "when",
      "where",
      "without",
      "zip",
      "zipObj"
    ]
  },
  {
    "name": "redux-action-router",
    "result": "Imports CJS (url-mapper)",
    "keys": null
  },
  {
    "name": "redux-form-validation",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "redux-loop",
    "result": "ok",
    "keys": [
      "Cmd",
      "combineReducers",
      "getCmd",
      "getModel",
      "install",
      "isLoop",
      "liftState",
      "loop",
      "mergeChildReducers",
      "reduceReducers"
    ]
  },
  {
    "name": "redux-modal",
    "result": "Imports CJS (hoist-non-react-statics)",
    "keys": null
  },
  {
    "name": "redux-namespace",
    "result": "Wrong ESM entry point",
    "keys": null
  },
  {
    "name": "redux-orm",
    "result": "Imports CJS (immutable-ops)",
    "keys": null
  },
  {
    "name": "redux-pouchdb",
    "result": "Imports CJS (deep-equal)",
    "keys": null
  },
  {
    "name": "redux-resource",
    "result": "ok",
    "keys": [
      "actionTypes",
      "getResources",
      "getStatus",
      "requestStatuses",
      "resourceReducer",
      "setResourceMeta",
      "upsertResources"
    ]
  },
  {
    "name": "redux-responsive",
    "result": "Imports CJS (mediaquery)",
    "keys": null
  },
  {
    "name": "redux-router5",
    "result": "ok",
    "keys": [
      "actionTypes",
      "actions",
      "createRouteNodeSelector",
      "reduxPlugin",
      "router5Middleware",
      "router5Reducer"
    ]
  },
  {
    "name": "redux-seamless-reducers",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "redux-search",
    "result": "Imports CJS (js-worker-search)",
    "keys": null
  },
  {
    "name": "redux-tree",
    "result": "ok",
    "keys": [
      "createBranch",
      "createLeaf",
      "createTree"
    ]
  },
  {
    "name": "regal",
    "result": "ok",
    "keys": [
      "Agent",
      "Charsets",
      "Game",
      "OutputLineType",
      "RegalError",
      "enqueue",
      "noop",
      "nq",
      "on",
      "onBeforeUndoCommand",
      "onPlayerCommand",
      "onStartCommand"
    ]
  },
  {
    "name": "regextras",
    "result": "ok",
    "keys": [
      "RegExtras",
      "mixinRegex",
      "regIterator"
    ]
  },
  {
    "name": "remark-autolink-headings",
    "result": "Imports CJS (unist-util-visit)",
    "keys": null
  },
  {
    "name": "remark-heading-gap",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "remark-highlight.js",
    "result": "Imports CJS (lowlight)",
    "keys": null
  },
  {
    "name": "remark-midas",
    "result": "Imports CJS (midas)",
    "keys": null
  },
  {
    "name": "reuse",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rmc-cascader",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rmc-date-picker",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "rmodal",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "roadtrip",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "robot-api",
    "result": "Imports CJS (roslib)",
    "keys": null
  },
  {
    "name": "rollup-plugin-commonjs",
    "result": "Imports CJS (micromatch)",
    "keys": null
  },
  {
    "name": "rollup-plugin-inject",
    "result": "Imports CJS (micromatch)",
    "keys": null
  },
  {
    "name": "rollup-plugin-json",
    "result": "Imports CJS (micromatch)",
    "keys": null
  },
  {
    "name": "rollup-plugin-memory",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "rollup-plugin-replace",
    "result": "Imports CJS (micromatch)",
    "keys": null
  },
  {
    "name": "rollup-plugin-riot",
    "result": "Imports CJS (riot-tmpl)",
    "keys": null
  },
  {
    "name": "rollup-plugin-stub",
    "result": "Imports CJS (rollup-pluginutils)",
    "keys": null
  },
  {
    "name": "rollup-plugin-typescript",
    "result": "Imports CJS (typescript)",
    "keys": null
  },
  {
    "name": "rot-js",
    "result": "ok",
    "keys": [
      "Color",
      "DEFAULT_HEIGHT",
      "DEFAULT_WIDTH",
      "DIRS",
      "Display",
      "Engine",
      "EventQueue",
      "FOV",
      "KEYS",
      "Lighting",
      "Map",
      "Noise",
      "Path",
      "RNG",
      "Scheduler",
      "StringGenerator",
      "Text",
      "Util"
    ]
  },
  {
    "name": "router1",
    "result": "ok",
    "keys": [
      "RouteCollection",
      "Router",
      "ScrollBehavior",
      "ScrollManager",
      "createBrowserHistory",
      "createHashHistory",
      "createServerHistory",
      "createTestHistory"
    ]
  },
  {
    "name": "router1-react",
    "result": "Imports CJS (classnames)",
    "keys": null
  },
  {
    "name": "rung",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "rx-react-container",
    "result": "Imports CJS (hoist-non-react-statics)",
    "keys": null
  },
  {
    "name": "rx-store",
    "result": "ok",
    "keys": [
      "createRxStore"
    ]
  },
  {
    "name": "rxfire",
    "result": "Wrong ESM entry point",
    "keys": null
  },
  {
    "name": "s-deviation",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "sagan",
    "result": "ok",
    "keys": [
      "BaseModel",
      "Store",
      "extendCollection",
      "extendModel",
      "middleware"
    ]
  },
  {
    "name": "samson.js",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "sandpit",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "schemation",
    "result": "ok",
    "keys": [
      "Mismatch",
      "MismatchAt",
      "Mismatches",
      "and",
      "any",
      "anyObject",
      "array",
      "boolean",
      "lazy",
      "matches",
      "not",
      "number",
      "object",
      "optional",
      "or",
      "string",
      "tryMatch",
      "validate",
      "where"
    ]
  },
  {
    "name": "screen-navigator",
    "result": "Imports CJS (tiny-emitter)",
    "keys": null
  },
  {
    "name": "scroll-parallax",
    "result": "Imports CJS (riot-observable)",
    "keys": null
  },
  {
    "name": "scroll-restoration-polyfill",
    "result": "Imports CJS (one-event)",
    "keys": null
  },
  {
    "name": "scrollreveal",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "searchkit",
    "result": "Wrong ESM entry point",
    "keys": null
  },
  {
    "name": "second",
    "result": "Imports CJS (bluebird)",
    "keys": null
  },
  {
    "name": "selector-observer",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "semantic-ui-react",
    "result": "Imports CJS (keyboard-key)",
    "keys": null
  },
  {
    "name": "semtex",
    "result": "ok",
    "keys": [
      "compile",
      "render"
    ]
  },
  {
    "name": "shapeshifter",
    "result": "Imports CJS (shapeshifter)",
    "keys": null
  },
  {
    "name": "shisell",
    "result": "ok",
    "keys": [
      "AnalyticsContext",
      "AnalyticsDispatcher",
      "createRootDispatcher"
    ]
  },
  {
    "name": "shop.js",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "shufflejs",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "sidenavjs",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "silver",
    "result": "Unable to install",
    "keys": null
  },
  {
    "name": "simple-get-json",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "simple-post-json",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "slimdom",
    "result": "ok",
    "keys": [
      "Attr",
      "CDATASection",
      "CharacterData",
      "Comment",
      "DOMImplementation",
      "Document",
      "DocumentFragment",
      "DocumentType",
      "Element",
      "MutationObserver",
      "MutationRecord",
      "Node",
      "ProcessingInstruction",
      "Range",
      "Text",
      "XMLDocument",
      "XMLSerializer",
      "document",
      "serializeToWellFormedString",
      "unsafeAppendAttribute",
      "unsafeCreateAttribute",
      "unsafeCreateElement"
    ]
  },
  {
    "name": "snabbdom-selector",
    "result": "ok",
    "keys": [
      "classNameFromVNode",
      "select",
      "selectorParser"
    ]
  },
  {
    "name": "snarkdown",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "snudown-js",
    "result": "ok",
    "keys": [
      "markdown",
      "markdownWiki"
    ]
  },
  {
    "name": "sorm",
    "result": "Uses CJS variables (require)",
    "keys": null
  },
  {
    "name": "spaniel",
    "result": "ok",
    "keys": [
      "IntersectionObserver",
      "SpanielObserver",
      "Watcher",
      "__w__",
      "elementSatisfiesRatio",
      "getGlobalEngine",
      "invalidate",
      "off",
      "on",
      "queryElement",
      "scheduleRead",
      "scheduleWork",
      "setGlobalEngine"
    ]
  },
  {
    "name": "spectacle",
    "result": "Imports CJS (marksy)",
    "keys": null
  },
  {
    "name": "spectra-data",
    "result": "Imports CJS (brukerconverter)",
    "keys": null
  },
  {
    "name": "spiritjs",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "stanza.io",
    "result": "Imports CJS (jxt)",
    "keys": null
  },
  {
    "name": "sting",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "stockpile.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "storejs",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "substrate",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "subunit",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "supercluster",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "superpack",
    "result": "ok",
    "keys": [
      "decoder",
      "encoder"
    ]
  },
  {
    "name": "svg-pan-zoom",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "svgson",
    "result": "Imports CJS (clean-deep)",
    "keys": null
  },
  {
    "name": "swim-client-js",
    "result": "Imports CJS (tslib)",
    "keys": null
  },
  {
    "name": "switcheroo",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "tabard",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "tag",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "template7",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "tf2-demo",
    "result": "Imports CJS (bit-buffer)",
    "keys": null
  },
  {
    "name": "tg-modal",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "tg-resources",
    "result": "Imports CJS (cookie)",
    "keys": null
  },
  {
    "name": "tiny-svg",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "tko.utils",
    "result": "ok",
    "keys": [
      "addCleaner",
      "addDisposeCallback",
      "addOrRemoveItem",
      "anyDomNodeIsAttachedToDocument",
      "arrayFilter",
      "arrayFirst",
      "arrayForEach",
      "arrayGetDistinctValues",
      "arrayIndexOf",
      "arrayMap",
      "arrayPushAll",
      "arrayRemoveItem",
      "catchFunctionErrors",
      "cleanNode",
      "cleanjQueryData",
      "cloneNodes",
      "clonePlainObjectDeep",
      "compareArrays",
      "createSymbolOrString",
      "debounce",
      "deferError",
      "domData",
      "domNodeIsAttachedToDocument",
      "domNodeIsContainedBy",
      "emptyDomNode",
      "ensureSelectElementIsRenderedCorrectly",
      "extend",
      "findMovesInArrayComparison",
      "fixUpContinuousNodeArray",
      "forceRefresh",
      "functionSupportsLengthOverwrite",
      "getObjectOwnProperty",
      "hasOwnProperty",
      "ieVersion",
      "isDocumentFragment",
      "isDomElement",
      "isIe6",
      "isIe7",
      "jQuerySetInstance",
      "makeArray",
      "memoization",
      "moveCleanedNodesToContainerElement",
      "objectForEach",
      "objectMap",
      "options",
      "otherNodeCleanerFunctions",
      "overwriteLengthPropertyIfSupported",
      "parseHtmlForTemplateNodes",
      "parseHtmlFragment",
      "parseJson",
      "range",
      "registerEventHandler",
      "removeCleaner",
      "removeDisposeCallback",
      "removeNode",
      "replaceDomNodes",
      "safeSetTimeout",
      "selectExtensions",
      "setDomNodeChildren",
      "setElementName",
      "setHtml",
      "setOptionNodeSelectionState",
      "setTextContent",
      "stringStartsWith",
      "stringTrim",
      "tagNameLower",
      "tasks",
      "throttle",
      "toggleDomNodeCssClass",
      "triggerEvent",
      "useSymbols",
      "virtualElements"
    ]
  },
  {
    "name": "tonal",
    "result": "Imports JSON",
    "keys": null
  },
  {
    "name": "tractor-beam",
    "result": "Imports CJS (uppie/uppie)",
    "keys": null
  },
  {
    "name": "traits.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "translate.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "truncate-html",
    "result": "Imports CJS (cheerio)",
    "keys": null
  },
  {
    "name": "trustly-client",
    "result": "Imports CJS (axios)",
    "keys": null
  },
  {
    "name": "tsdi",
    "result": "Imports CJS (reflect-metadata)",
    "keys": null
  },
  {
    "name": "tux",
    "result": "Imports CJS (react-chain)",
    "keys": null
  },
  {
    "name": "tweezer.js",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "two.js",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "typeit",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "uikit-react",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "ultra",
    "result": "Browser only",
    "keys": null
  },
  {
    "name": "unzalgo",
    "result": "ESM not published",
    "keys": null
  },
  {
    "name": "uppy",
    "result": "Imports CJS (uppy/@core)",
    "keys": null
  },
  {
    "name": "url-js",
    "result": "ok",
    "keys": null
  },
  {
    "name": "utm",
    "result": "ok",
    "keys": [
      "fromLatLon",
      "toLatLon"
    ]
  },
  {
    "name": "valve",
    "result": "Wrong ESM entry point",
    "keys": null
  },
  {
    "name": "vega-embed",
    "result": "Imports CJS (semver)",
    "keys": null
  },
  {
    "name": "verup",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "victory",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-area",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-box-plot",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-legend",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-stack",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-tooltip",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "victory-voronoi",
    "result": "Imports CJS (react)",
    "keys": null
  },
  {
    "name": "videojs-dock",
    "result": "Imports CJS (videojs-vtt)",
    "keys": null
  },
  {
    "name": "videojs-errors",
    "result": "Imports CJS (videojs-vtt)",
    "keys": null
  },
  {
    "name": "videojs-overlay",
    "result": "Imports CJS (videojs-vtt)",
    "keys": null
  },
  {
    "name": "videojs-playlist",
    "result": "Imports CJS (videojs-vtt)",
    "keys": null
  },
  {
    "name": "videojs-playlist-ui",
    "result": "Imports CJS (videojs-vtt)",
    "keys": null
  },
  {
    "name": "videojs-seek-buttons",
    "result": "Imports CJS (video)",
    "keys": null
  },
  {
    "name": "videomail-client",
    "result": "Imports CJS (classlist)",
    "keys": null
  },
  {
    "name": "viewerjs",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "vmap",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "vue-material",
    "result": "Not ESM",
    "keys": null
  },
  {
    "name": "vue-property-decorator",
    "result": "Imports CJS (vue)",
    "keys": null
  },
  {
    "name": "vue-rx",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "vuex",
    "result": "ok",
    "keys": [
      "Store",
      "createNamespacedHelpers",
      "default",
      "install",
      "mapActions",
      "mapGetters",
      "mapMutations",
      "mapState"
    ]
  },
  {
    "name": "web-verse",
    "result": "Imports CJS (spark-md5)",
    "keys": null
  },
  {
    "name": "webcharts",
    "result": "Imports CJS (d3)",
    "keys": null
  },
  {
    "name": "wikipathways-api-client",
    "result": "Imports CJS (urijs)",
    "keys": null
  },
  {
    "name": "wildberry-princess",
    "result": "ok",
    "keys": [
      "default"
    ]
  },
  {
    "name": "windsock",
    "result": "ok",
    "keys": [
      "Bind",
      "Component",
      "Element",
      "Fragment",
      "Html",
      "Http",
      "Jsonml",
      "Observer",
      "Signal",
      "Store",
      "Text",
      "clone",
      "compile",
      "destroy",
      "parse",
      "plugin",
      "router",
      "transclude",
      "url",
      "util"
    ]
  },
  {
    "name": "workfront-api",
    "result": "Imports CJS (form-data)",
    "keys": null
  },
  {
    "name": "yode",
    "result": "Imports CJS (recast)",
    "keys": null
  }
]
